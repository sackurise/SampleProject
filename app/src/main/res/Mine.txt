11.9513866
79.67924595

Coding Standards : http://math.hws.edu/eck/cs124/f11/style_guide.html

Before Running Any project in Android Studio, Check the Build-Variants tab and confirm "app" module is in "Version Debug" and then run the app.

--->applicationId is the fully qualified package name for your application
--->when you specify the layout_weight, you should change the width of the UI view to be zero (0dp)
--->Activity class is a subclass of Context
--->	xhdpi: 2.0       	//in drawable folder Extra-high density pixel
	hdpi: 1.5		//in High density pixel
	mdpi: 1.0 (baseline)	//in medium density pixel
	ldpi: 0.75		//in low density pixel
--->Prefer the sp(Scale-independent pixel) to define text Sizes
--->Activity  protected void onCreate(Bundle savedInstanceState){.....}
--->Fragment  public view onCreateView(LayoutInflater inflater, ViewGroup container, Bundle SavedInstanceState){.....}
--->Fragment-to-Fragment communication is done through the associated Activity. Two Fragments should never communicate directly

--->External Intent declares the class name of the component to start
--->Internal Intent doesn't declare the class name, it decalres an action to perform
--->To allow other apps to start your activity, you need to add an <intent-filter> element in your manifest file for the corresponding <activity> element.
    When your app is installed on a device, the system identifies your intent filters and adds the information to an internal catalog of intents supported 
    by all installed apps. When an app calls startActivity() or startActivityForResult(), with an implicit intent, 
    the system finds which activity (or activities) can respond to the intent.

--->Your activity will be destroyed and recreated each time the user rotates the screen. When the screen changes orientation, 
    the system destroys and recreates the foreground activity because the screen configuration has changed 
    and your activity might need to load alternative resources (such as the layout).

Service
--------
---> Service is a long-running operations in the background and does not provide a user interface.
---> Service is seprate process runs in the background, but A service runs in the main thread of its hosting process by default

---> 2 ways of using the Service, 1)startService() 2)bindService()
---> it is started by calling StartService()    which inturn call  onStartCommand()		-->Start the Service 
---> An application bind to service by calling bindService()   which inturn call onBind() 	-->Bind the Service

--—> The service does not create its own thread and does not run in a separate process unless you specify

---> 	onCreate()
	onStartCommand()		//stopSelf() or stopService() (from other process);
	onBind()
	onDestroy()

---> The service is available to only your app by including android:exported=false in AndroidManifest.xml file
---> 2 classses for creating Service
1) Service : by default run using Main Thread(Slow performance), User has to create a new Thread for service work

2) IntentService : 
	sub class of Service
	uses a seprate Worker Thread for Service Work
	must implement onHandleIntent()

---> If the system kills your service, Service restarts it as soon as resources become available again
---> Once you publish your application, you should not change the name of the Service
---> Other component start service by bindService(), not by startService().      For this you should implement onBind() method return type is IBinder
	e.g : protected IBinder onBind()
	      {
		return null;
	      }
---> The client uses the IBinder to start communicating with the Service
---> Multiple clients can bind to the service at once, once done it calls unbindService() to unbind it
---> Toast Notification, StatusBar Notification are used to intimate the user that the service has done

---> onCreate(), onStartCommand(), onBind(), onUnbind(), onRebind(), onDestroy()
---> A bound service is a type of service which can bind with one or more application components like activities and return the results back to them.

--------------------------------------------------------------------------------------------------------------------------------------------
Naming Convention in java
============================================================================================================================================
UpperCamelCase - Class Names (e.g: Measurement, TransportVehicle, IInBillingService
lowerCamelCase - Methods, local variable, Instance variable, Class Variables  (e.g: run(), runFast(), getBackground(), myWidth, myHeight)
UpperCase      - Constants, written in uppercase characters separated by underscores (e.g: MAX_HEIGHT, MAX_WEIGHT, MAX_WIDTH)
--------------------------------------------------------------------------------------------------------------------------------------------
ListView Information & how listView works & code for Array Adapter
=============================================================================================================================================

For ListView always set

    layout_width = "match_parent"
    layout_height= "match_parent"
    Never set the layout_height and layout_width to "wrap_content"

For more info : http://stackoverflow.com/questions/11945563/how-listviews-recycling-mechanism-works/14108676#14108676

srcarray = new String[]{"White", "Green", "Blue", "Red", "Orange", "yellow", "Black", "Rose", "Pink", "Brown", 
"Purple", "Pleasant","Voilet","Gray","Vennila", "Strawberrry"};

	ListView listview = (ListView)findViewById(R.id.items);
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, srcarray);
        listview.setAdapter(arrayAdapter);
----------------------------------------------------------------------------------------------------------------------------------------------
ListView code for Base Adapter
==============================================================================================================================================

public class MyAdapter extends BaseAdapter
    {

	public MyAdapter(List list, Context context)
	{
	  this.list = //list of values passed from the Activity class while calling the MyAdapter Class
	  this.context = context of the Activity (MainActivity.this)
	}

        public int getCount() {

            Log.d(TAG, ""+dynamiclist.size());
            return dynamiclist.size();
        }

        @Override
        public Object getItem(int position) {

            Log.d(TAG, ""+dynamiclist.get(position).toString());
            return dynamiclist.get(position);
        }

        @Override
        public long getItemId(int position)
        {
            Log.d(TAG, "Position : "+position);
            return position;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            if(convertView == null)
            {
                LayoutInflater layoutInflater = (LayoutInflater)CustomAdapter.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                convertView = layoutInflater.inflate(R.layout.listitem, parent, false);

            }

            TextView bname = (TextView)convertView.findViewById(R.id.bname1);
            TextView bauthor = (TextView)convertView.findViewById(R.id.bauthor1);
            TextView bprice = (TextView)convertView.findViewById(R.id.bprice1);
            TextView bversion = (TextView)convertView.findViewById(R.id.bversion1);
            CheckBox cstatus = (CheckBox)convertView.findViewById(R.id.cbkstatus);

            Book book = dynamiclist.get(position);  //returns hash code of the position

            bname.setText("Book : "+book.name);
            bauthor.setText("Author : "+book.author);
            bprice.setText("Price : "+Integer.toString(book.price));
            bversion.setText("  Version : "+Float.toString(book.version));
            return convertView;
        }
    }


Other way of Inflating the layout in Adapter
--------------------------------------------

private LayoutInflater inflater;

in constructor()
{
  inflater = LayoutInflater.from(context);
}

in getView()
{
  convertView = inflater.inflate(R.layout.list_item, null);
}
-------------------------------------------------------------------------------------------------------------------------------------
ListView code for Cursor Adapter
=====================================================================================================================================
class DbAdapter extends CursorAdapter
    {

        DbAdapter(Context context, Cursor c)
        {
            super(context, c);
        }

        class ViewHolder
        {
            private CheckBox checkBox;

            public View base;
            public ViewHolder(View base){

                this.base = base;

            }

            public CheckBox getCheckBox() {

                return checkBox;

            }
            public void setCheckBox(CheckBox checkBox) {

                this.checkBox = checkBox;

            }
        }
        @Override
        public View newView(Context context, Cursor cursor, ViewGroup parent)
        {
            ViewHolder viewHolder;
            LayoutInflater inflater = LayoutInflater.from(parent.getContext());
            View retView = inflater.inflate(R.layout.listitem, parent, false);
            viewHolder = new ViewHolder(retView);
            retView.setTag(viewHolder);
            return retView;
        }

        @Override
        public void bindView(View view, Context context, Cursor rs)
        {
            final Cursor cursor = rs;

            ViewHolder viewHolder = (ViewHolder)view.getTag();
            viewHolder.setCheckBox((CheckBox)view.findViewById(R.id.cbkstatus));
            CheckBox cb = viewHolder.getCheckBox();
            cb.setTag(new Integer(cursor.getPosition()));
            TextView bid = (TextView)view.findViewById(R.id.bookid);
            TextView bname = (TextView)view.findViewById(R.id.bname1);
            TextView bauthor = (TextView)view.findViewById(R.id.bauthor1);
            TextView bprice = (TextView)view.findViewById(R.id.bprice1);
            TextView bversion = (TextView)view.findViewById(R.id.bversion1);
            ImageView bimg = (ImageView)view.findViewById(R.id.imageView1);

            String id = rs.getString(rs.getColumnIndex("_id"));
            String name = rs.getString(rs.getColumnIndex(MyDBHelper.NAME));
            String author =rs.getString(rs.getColumnIndex(MyDBHelper.AUTHOR));
            String price = rs.getString(rs.getColumnIndex(MyDBHelper.PRICE));
            String version = rs.getString(rs.getColumnIndex(MyDBHelper.VERSION));
            String uri = rs.getString(rs.getColumnIndex(MyDBHelper.PATH));
            Bitmap bitmap = BitmapFactory.decodeFile(uri);
            Log.d("Path of image is ", uri);
            bimg.setImageBitmap(bitmap);
            bid.setText(id);
            bname.setText("Book : "+name);
            bauthor.setText("Author : "+author);
            bprice.setText("Price : "+price);
            bversion.setText("  Version : "+version);
        }
    }
-------------------------------------------------------------------------------------------------------------------------------------
Database Helper Class
=====================================================================================================================================
public class MyDBHelper extends SQLiteOpenHelper
{
    public static final String tag="MyDBHelper : ";
    public static final String NAME ="name";
    public static final String AUTHOR ="author";
    public static final String PATH ="path";
    public static final String PRICE ="price";
    public static final String VERSION ="version";

    MyDBHelper(Context context)
    {
        super(context, "Bookdb.db", null, 1);
        Log.d(tag, "Consturctor...");
    }

    public void onCreate(SQLiteDatabase sqLiteDatabase)
    {
        sqLiteDatabase.execSQL("drop table if exists bookinfo");
        Log.d(tag, "Creating table......");
        sqLiteDatabase.execSQL("create table bookimg(_id integer primary key autoincrement, " +
                "name text, author text, price text, version text, path text)");
    }

    public boolean insertData(String bname, String bauthor, String bprice, String bversion, String path)
    {
        Log.d(tag, "Inserting  data...");
        SQLiteDatabase sd = this.getWritableDatabase();
      //  sd.execSQL("delete from bookimg");
        ContentValues contentValues = new ContentValues();
        contentValues.put("name", bname);
        contentValues.put("author", bauthor);
        contentValues.put("price", bprice);
        contentValues.put("version", bversion);
        contentValues.put("path", path);
        sd.insert("bookimg", null, contentValues);
        return true;
    }

    public Cursor getValues()
    {
        Log.d(tag, "Getting values ....");
        SQLiteDatabase sd = this.getReadableDatabase();
        Cursor cursor = sd.rawQuery("select * from bookimg" , null);
        return cursor;
    }

    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int olddb, int newdb)
    {
        SQLiteDatabase sqLiteDatabase1 = getWritableDatabase();
        sqLiteDatabase.execSQL("Drop table if exists bookimg");
    }

   public boolean updateData(Integer bid, String bname, String bauthor, String bpublish, String bprice, String bversion)
    {
        Log.d(tag, "Updating  data...");
        SQLiteDatabase sd = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("name", bname);
        contentValues.put("author", bauthor);
        contentValues.put("publish", bpublish);
        contentValues.put("price", bprice);
        contentValues.put("version", bversion);
        sd.update("book", contentValues, "id=?", new String[]{Integer.toString(bid)});
        return true;
    }

    public ArrayList<String> getAllCotacts()
    {
        ArrayList<String> array_list = new ArrayList<String>();
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor res =  db.rawQuery( "select * from contacts", null );
        res.moveToFirst();

        while(res.isAfterLast() == false){
            array_list.add(res.getString(res.getColumnIndex(CONTACTS_COLUMN_NAME)));
            res.moveToNext();
        }
        return array_list;
    }

-------------------------------------------------------------------------------------------------------------------------------------
ListView using BaseAdapter.notifyDataSetChanged()
=====================================================================================================================================
 
CompleteListAdapter.java
========================
 import java.util.List;  
 import android.app.Activity;  
 import android.content.Context;  
 import android.view.LayoutInflater;  
 import android.view.View;  
 import android.view.ViewGroup;  
 import android.widget.BaseAdapter;  
 import android.widget.TextView;  

 public class CompleteListAdapter extends BaseAdapter {  
      private Activity mContext;  
      private List<String> mList;  
      private LayoutInflater mLayoutInflater = null;  
      public CompleteListAdapter(Activity context, List<String> list) {  
           mContext = context;  
           mList = list;  
           mLayoutInflater = (LayoutInflater) mContext  
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);  
      }  
      @Override  
      public int getCount() {  
           return mList.size();  
      }  
      @Override  
      public Object getItem(int pos) {  
           return mList.get(pos);  
      }  
      @Override  
      public long getItemId(int position) {  
           return position;  
      }  
      @Override  
      public View getView(int position, View convertView, ViewGroup parent) {  
           View v = convertView;  
           CompleteListViewHolder viewHolder;  
           if (convertView == null) {  
                LayoutInflater li = (LayoutInflater) mContext  
                          .getSystemService(Context.LAYOUT_INFLATER_SERVICE);  
                v = li.inflate(R.layout.list_layout, null);  
                viewHolder = new CompleteListViewHolder(v);  
                v.setTag(viewHolder);  
           } else {  
                viewHolder = (CompleteListViewHolder) v.getTag();  
           }  
           viewHolder.mTVItem.setText(mList.get(position));  
           return v;  
      }  
 }  
 class CompleteListViewHolder {  
      public TextView mTVItem;  
      public CompleteListViewHolder(View base) {  
           mTVItem = (TextView) base.findViewById(R.id.listTV);  
      }  
 } 


ListActivity.java
=================

 import java.util.ArrayList;  
 import java.util.List;  
 import android.app.Activity;  
 import android.os.Bundle;  
 import android.view.View;  
 import android.view.View.OnClickListener;  
 import android.widget.Button;  
 import android.widget.ListView;  

 public class CompleteListActivity extends Activity implements OnClickListener 
 {  
      private ListView mCompleteListView;  
      private Button mAddItemToList;  
      private List<String> mItems;  
      private CompleteListAdapter mListAdapter;  
      private static final int MIN = 0, MAX = 10000;  
      @Override  
      protected void onCreate(Bundle savedInstanceState) {  
           super.onCreate(savedInstanceState);  
           setContentView(R.layout.activity_complete_list);  
           initViews();  
           mItems = new ArrayList<String>();  
           mListAdapter = new CompleteListAdapter(this, mItems);  
           mCompleteListView.setAdapter(mListAdapter);  
      }  
      private void initViews() {  
           mCompleteListView = (ListView) findViewById(R.id.completeList);  
           mAddItemToList = (Button) findViewById(R.id.addItemToList);  
           mAddItemToList.setOnClickListener(this);  
      }  
      private void addItemsToList() {  
           int randomVal = MIN + (int) (Math.random() * ((MAX - MIN) + 1));  
           mItems.add(String.valueOf(randomVal));  
           mListAdapter.notifyDataSetChanged();  
      }  
      @Override  
      public void onClick(View v) {  
           switch (v.getId()) {  
           case R.id.addItemToList:  
                addItemsToList();  
                break;  
           }  
      }  
 } 
-------------------------------------------------------------------------------------------------------------------------------------
Fragment to Fragment Communication through Interface
=====================================================================================================================================

Communicator.java (Interface)
-----------------------------
public interface Communicator
{
    public void Message(String OS_Name);
}

activity_main.xml
-----------------

 <fragment
        android:id="@+id/list_Fragment"
        android:layout_width="0dp"
        android:layout_weight="0.30"
        android:layout_height="match_parent"
        class="autopin.user.me.fragmentapp.ListingFragment" >
    </fragment>

    <fragment
        android:id="@+id/detail_fragment"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="0.70"
        class="autopin.user.me.fragmentapp.DetailFragment">
        </fragment>

MainActivity.java
-----------------

public class MainActivity extends FragmentActivity implements Communicator
{
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void Message(String s)
    {
        DetailFragment detailFragment = (DetailFragment)getFragmentManager().findFragmentById(R.id.detail_fragment);
        if(detailFragment != null && detailFragment.isInLayout())
        {
            detailFragment.setText(s);
        }
    }
}

ListingFragment.java
--------------------

public class ListingFragment extends Fragment implements View.OnClickListener
{
    private Communicator communicator;
    private Button btn_ios, btn_android, btn_windows;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,Bundle savedInstanceState)
    {
        return inflater.inflate(R.layout.fragment_list_fragment, container, false);
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState)
    {
        super.onActivityCreated(savedInstanceState);
        communicator = (Communicator)getActivity();     // Line where assigning the Activity to Interface, (so 2 Fragment Communicate with this Interface)
        btn_android = (Button) getActivity().findViewById(R.id.btn_android);
        btn_ios = (Button) getActivity().findViewById(R.id.btn_ios);
        btn_windows = (Button) getActivity().findViewById(R.id.btn_windows);
        btn_android.setOnClickListener(this);
        btn_ios.setOnClickListener(this);
        btn_windows.setOnClickListener(this);
    }

    public void onClick(View v) {
        updateMessage(v);
    }

    public void updateMessage(View view)
    {
        switch(view.getId()) {
            case R.id.btn_android:
                updateFragment("Text from Android list");
                break;
            case R.id.btn_ios:
                updateFragment("Text from IOS list");
                break;
            case R.id.btn_windows:
                updateFragment("Text from Windows ");
                break;
        }

    }

    public void updateFragment(String s)
    {
        communicator.Message(s);
    }
}

DetailFragment.java
===================

public class DetailFragment extends Fragment{

    public void setText(String item) {
        TextView view = (TextView) getView().findViewById(R.id.display_tv);
        view.setText(item);
    }
}

-------------------------------------------------------------------------------------------------------------------------------------
Shared Preferences to add Data and Retrieve data 
=====================================================================================================================================
    SharedPreferences sharedPreferences;
    Editor editor;
    public static final String MyPREFERENCES = "Myprefs" ;

	sharedPreferences = getSharedPreferences(MyPREFERENCES, Context.MODE_WORLD_READABLE);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                String name = ed1.getText().toString();
                Long phoneno = Long.parseLong(ed2.getText().toString());
                String email = ed3.getText().toString();
                editor = sharedPreferences.edit();
                editor.putString(Name, name);
                editor.putLong(Phone,phoneno);
                editor.putString(Email, email);
                editor.commit();

                //Toast.makeText(MainActivity.this, "Thank you", Toast.LENGTH_LONG).show();
                setValues();

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });

Retrieve data
=============
	sharedPreferences = getSharedPreferences("Myprefs", Context.MODE_PRIVATE);
        if(sharedPreferences.contains("nameKey")) {
            String value = "Name : ";
            value = value + sharedPreferences.getString("nameKey", null).toString() + "\n";
            value = value + " Phone : " + sharedPreferences.getLong("phoneKey", 0) + "\n";
            value = value + " Email : " + sharedPreferences.getString("emailKey", null);
            TextView t1 = (TextView) findViewById(R.id.text3);
            t1.setText(value);
        }
        else
        {
            Toast.makeText(this, "No Preference to Display", Toast.LENGTH_LONG).show();
        }

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Inserting Image using startActivityForResult or onActivityResult methods (2 Examples)
======================================================================================================================================================================
Used in the scenario when you need some data from another activity to the calling activity, here we need data form DataEntry.class to MainActivity.java

Example-1
==========

	MainActivity.java
	=================
	public void onClickEnterData(View btnAdd) 
	{  
		//calling the DataEntry.java class onCreate() method 
        	startActivityForResult(new Intent(this, DataEntry.class), REQUEST_CODE);   //REQUEST_CODE=1 (can be any number upto 4 digit)
        }



    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) 	//onActivityResult( 1, 2, data-->Intent where the passed Information is available)
    {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == REQUEST_CODE &&  resultCode == RESPONSE_CODE) {

            databaseHelper.insertData(data.getExtras().getString("tag_person_name"), data.getExtras().getString("tag_person_pin"));

            customAdapter.changeCursor(databaseHelper.getAllData());
        }
     }


	DataEntry.java
	==============

	public void onClickAdd (View btnAdd) 			//called on button click Add
	{				
        String personName = editTextPersonName.getText().toString();
        String personPIN = editTextPersionPIN.getText().toString();

        if ( personName.length() != 0 && personPIN.length() != 0 ) {

            Intent newIntent = getIntent();			//creating Intent to pass the data to mainActivity
            newIntent.putExtra("tag_person_name", personName);	//putting the values
            newIntent.putExtra("tag_person_pin", personPIN);

            this.setResult(RESPONSE_CODE, newIntent);		//RESPONSE_CODE = 2 (can be any number upto 4 digit)   Mandatory function to set the Result
            finish();						//finish the Response Activity
        }
    }



Example-2
==========
		when you call Intent intent = new Intent(MainActivity.this, MyNewActivity.class);
              	startActivity(intent); The system automatically calls finish() method of MainActivity and loads new Activity in it.

 
    public void selectimage(View view)		//Called from onClickButton Event from XML
    {
        Intent intent = new Intent();
        intent.setType("image/*");
        intent.setAction(Intent.ACTION_GET_CONTENT);
        startActivityForResult(Intent.createChooser(intent, "Select Picture"), SELECT_PICTURE); //SELECT_PICTURE = 1
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        if(resultCode == RESULT_OK)
        {
            Uri selecteddatauri = data.getData();
            selectedImagePath = getPath(selecteddatauri);
            Log.d(TAG, " uri is :"+selectedImagePath);
            srcimgview.setVisibility(View.VISIBLE);
            srcimgview.setImageURI(selecteddatauri);
        }
    }

    public String getPath(Uri uri) {
        String[] projection = { MediaStore.Images.Media.DATA };
        Cursor cursor = managedQuery(uri, projection, null, null, null);
       // CursorLoader cursorLoader = new CursorLoader(this, uri, projection, null, null,null);
        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        cursor.moveToFirst();
        return cursor.getString(column_index);
    }

    public void insert(View view)
    {
        bname = ed1.getText().toString();
        bauthor = ed2.getText().toString();
        bprice = ed4.getText().toString();
        bversion = ed5.getText().toString();

        if(!bname.equals("")) {
            dbHelper = new MyDBHelper(this);
            boolean action = dbHelper.insertData(bname, bauthor, bprice, bversion, selectedImagePath);
            if (action)
                Toast.makeText(this, bname + " Book details entered Success", Toast.LENGTH_LONG).show();
            Intent intent = new Intent(this, Listview_Cursor_activity.class);
            startActivity(intent);
        }
        else
            Toast.makeText(this, bname + " Enter the required details", Toast.LENGTH_LONG).show();
    }

    public void viewbooks(View view)
    {
        Intent intent = new Intent(this, Listview_Cursor_activity.class);
        startActivity(intent);
    }
-------------------------------------------------------------------------------------------------------------------------------------
RadioButton and Radio Group code
=====================================================================================================================================
<RadioGroup
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/rdgengroup"
            android:layout_marginLeft="@dimen/uileft">
        <RadioButton
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/rbmale"
            android:text="male"/>
        <RadioButton
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/rbfemale"
            android:text="female"/>
        </RadioGroup>

rgb = (RadioGroup)findViewById(R.id.rdgengroup);
rbmale = (RadioButton)findViewById(R.id.rbmale);
rbfemale= (RadioButton)findViewById(R.id.rbfemale);

int selectedId = rgb.getCheckedRadioButtonId();
            if(selectedId == R.id.rbmale)
                gender  = "Male";
            if(selectedId == R.id.rbfemale)
                gender ="Female";

----------------------------------------------------------------------------------------------------------------------------------------------
JSON code to read data from the String
==============================================================================================================================================
if(JsonStr != null)   //JsonStr is  a  String
            {
                try {
                    JSONObject object = new JSONObject(JsonStr);
                    JSONArray jsonarray = object.getJSONArray(TAG_CONTACTS); //TAG_CONTACTS is the name of the Array in JSON
                    for(int i=0; i<jsonarray.length(); i++)
                    {
                        JSONObject jsonObject = jsonarray.getJSONObject(i);
                        String id = jsonObject.getString(TAG_ID);
                        String name = jsonObject.getString(TAG_NAME);
                        String email = jsonObject.getString(TAG_EMAIL);
                        String salary = jsonObject.getString(TAG_SALARY);
                        String phone = jsonObject.getString(TAG_PHONE);

                        HashMap<String, String> contact = new HashMap<>();
                        contact.put(TAG_ID, id);
                        contact.put(TAG_NAME, name);
                        contact.put(TAG_EMAIL, email);
                        contact.put(TAG_SALARY, salary);
                        contact.put(TAG_PHONE, phone);

                        contactlist.add(contact);
                    }
                }
                catch(Exception e)
                {
                    System.out.print(e.getMessage());
                }


----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Drawable folder Selector xml file / stroke/shape/corners
======================================================================================================================================================================

<View android:background="@drawable/sliding_tab_outline">


sliding_tab_outline.xml
-----------------------

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:shape="rectangle">
    <stroke
        android:width="1dp"
        android:color="@color/bars_button_bgcolor" >
    </stroke>
    <corners android:topLeftRadius="0.1dp" android:topRightRadius="8dp"
        android:bottomLeftRadius="0.1dp" android:bottomRightRadius="8dp"/>
    <solid android:color="@color/bars_button_bgcolor"/>
</shape>



Customized Button with 3 images from Drawable folder
====================================================
<Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_alignParentLeft="true"
        android:layout_below="@+id/btn3"
        android:layout_marginTop="190dp"
        android:id="@+id/btn5"
        android:text="Customized List Activity"
        android:onClick="customizedListactivity"
        android:drawableLeft="@drawable/logout"
        android:background="@drawable/button_effect"
        style="?android:borderlessButtonStyle"/>

button_effect.xml (In Drawable folder)

<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:drawable="@drawable/button_press" android:state_focused="true"></item>
    <item android:drawable="@drawable/button_focus" android:state_pressed="true"></item>
    <item android:drawable="@drawable/button_default"></item>
</selector>

-----------------------------------------------------------------------------------------
Checkbox in ListView to maintain the same position
==================================================
Inside the Adapter class

 static class ViewHolder {
        public CheckBox checkbox;
    }

Inside getView(position, View, ViewGroup)
{ 
  ViewHolder viewHolder = new ViewHolder();
  if (convertView == null) 
  {
   LayoutInflater inflator = context.getLayoutInflater();
   convertView = inflator.inflate(R.layout.listitem, null);

	//Get the id of the elements from the listview
		viewHolder.checkbox = (CheckBox) convertView.findViewById(R.id.cbkstatus);

                viewHolder.checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        int getPosition = (Integer) buttonView.getTag();  // Here we get the position that we have set for the checkbox using setTag.
                        dynamiclist.get(getPosition).setSelected(buttonView.isChecked()); // Set the value of checkbox to maintain its state.
                    }
                });
                convertView.setTag(viewHolder);
                convertView.setTag(R.id.cbkstatus, viewHolder.checkbox);
  } 
  else 
  {
       viewHolder = (ViewHolder) convertView.getTag();
  }
  viewHolder.checkbox.setTag(position); // This line is important.
  viewHolder.checkbox.setChecked(dynamiclist.get(position).isSelected());
  return convertView;

and include this 2 methods (don't modify these methods)
---------------------------

    public int getViewTypeCount() {

        return getCount();
    }
    public int getItemViewType(int position) {

        return position;
    }
---------------------------------------------------------------------------------------------------------------------
Http code to access Network and get the response
=====================================================================================================================
InputStream inputStream;

try
        {
            ConnectivityManager manager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
            NetworkInfo info = manager.getActiveNetworkInfo();
            if(info != null && info.isConnected())
            {
	    URL url = new URL("http://172.21.4.104/evtags/v2/Hashtags/23?Start=0&Platform=ios&FilterType=0&HashtagType=1&userid=2");
            HttpURLConnection conn = (HttpURLConnection)url.openConnection();
            conn.setReadTimeout(10000);
            conn.setConnectTimeout(15000);
            conn.setRequestMethod("GET");
            conn.setDoInput(true);
            conn.connect();

            int responsecode = conn.getResponseCode();
            Log.d(TAG, "Response Code is :"+responsecode);

            inputStream = conn.getInputStream();
            BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
            while((line=br.readLine())!=null)
            {
                result = result+line;
            }
	}
	catch (Exception e)
        {
            Log.d(TAG, e.getMessage());
        }
	finally()
	{
	   if(inputStream != null)
	      inputStream.close();
	}

	try
	{
                return downloadUrl("http://www.google.co.in");
        } 
	catch (IOException e) 
	{
                return "Unable to retrieve web page. URL may be invalid.";
        }
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Asynchronous Task doInBackground Example with execute()
==============================================================================================================================================================

in onCreate() method
====================
	new DownloadFilesTask().execute(url1, url2, url3);


Background Thread Class
=======================
private class DownloadFilesTask extends AsyncTask<URL, Integer, Long> 	//AsyncTask<parameters, Progress, Return Type>
{											URL[] ,  Void   , Long Value
     protected Long doInBackground(URL... urls) {
         int count = urls.length;
         long totalSize = 0;
         for (int i = 0; i < count; i++) {
             totalSize += Downloader.downloadFile(urls[i]);
             publishProgress((int) ((i / (float) count) * 100));
             
             if (isCancelled()) break;		// Escape early if cancel() is called
         }
         return totalSize;
     }

     protected void onProgressUpdate(Integer... progress) {
         setProgressPercent(progress[0]);
     }

     protected void onPostExecute(Long result) {			//onPostExecute(Long Value)
         showDialog("Downloaded " + result + " bytes");
     }
 }

The point of async task is that the task is asynchronous, meaning that after you call execute() on the task, 
The task starts running on a thread of its own. returning a value from asynctask would be pointless because 
the original calling thread has already carried on doing other stuff (thus the task is asynchronous).

Think of time: At one point of time, you started a task that will run in parallel with the main thread. 
When the parallel-running task completed, time has also elapsed on the main thread. 
The parallel task cannot go back in time to return a value to the main thread.



AsyncResponse.java
==================
public interface AsyncResponse
{
    void processFinish(ArrayList list);
}

GetParseData.java
=================
public class GetParseData extends AsyncTask<String, Void, String>
{
    public AsyncResponse delegate=null;
    protected String doInBackground(String... params)
    {
		//do all the background process 
		//retrun String;
    }
}

protected void onPostExecute(String result)
{
    delegate.processFinish(alldatalist);		//The data which you want to return to main Thread

}

MainActivity.java
=================
GetParseData asyncobject = new GetParseData();

onCreate()
{
 asyncobject.delegate = this;
  asyncobject.execute("http://172.21.4.104/evtags/v2/Hashtags/23?Start=0&Platform=ios&FilterType=0&HashtagType=1&userid=2");
}

public void processFinish(ArrayList list)
    {
        if(list.size()!=0)
        {
            Log.d(TAG, "Enter to set Adapter with listview");
            myAdapter = new MyAdapter(list, MainActivity.this);
            listview.setVisibility(View.VISIBLE);
            listview.setAdapter(myAdapter);
            Log.d(TAG, "Exit from set Adapter with listview");
        }
    }
-------------------------------------------------------------------------------------------------------------------------
ListView Multiple items on the same elements is done by Making all the elements VISIBLE = "INVISIBLE"
and from the getView method assign the value for the control and make only one element as Visible
=========================================================================================================================
<RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="@dimen/viewflipper_height">
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:id="@+id/imgvwcontent"
                android:src="@drawable/index1"
                android:visibility="invisible">
                </ImageView>
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/txtvwcontent"
                android:visibility="invisible">
                </TextView>
            <VideoView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:id="@+id/videocontent"
                android:visibility="invisible">
                </VideoView>
        </RelativeLayout>

Case 1: Text
Case 2: Video
Case 3: Image

		int posttype = Integer.parseInt(posttypeval);
                switch (posttype) {
                    case 1: {
                        viewHolder.videocontent.setVisibility(View.INVISIBLE);
                        viewHolder.txtvwcontent.setVisibility(View.VISIBLE);
                        viewHolder.imgvwcontent.setVisibility(View.INVISIBLE);
                        try {
                            Log.d(TAG, "Photo : " + dataModel.getPhoto().get(position));
                            viewHolder.imgedtimage.setVisibility(View.VISIBLE);
                            Picasso.with(context)
                                    .load(R.drawable.editimg1)
                                    .resize(50, 50)
                                    .into(viewHolder.imgedtimage);
                            this.notifyDataSetChanged();
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            String data = dataModel.getPostContent().get(position);
                            byte[] bytedata = Base64.decodeBase64(data.getBytes());
                            String decodedstr = new String(bytedata);
                            viewHolder.txtvwcontent.setText(decodedstr);
                            this.notifyDataSetChanged();
                        }
                        catch(Exception e)
                        {
                            System.out.println(e);
                        }
                        break;
                    }
                    case 2: {
                        viewHolder.videocontent.setVisibility(View.VISIBLE);
                        viewHolder.txtvwcontent.setVisibility(View.INVISIBLE);
                        viewHolder.imgvwcontent.setVisibility(View.INVISIBLE);
                        MediaController mediaController = new MediaController(context);
                        mediaController.setAnchorView(viewHolder.videocontent);
                        Uri video = Uri.parse("http://download.itcuties.com/teaser/itcuties-teaser-480.mp4#sthash.QexCap8v.dpuf");
                        viewHolder.videocontent.setMediaController(mediaController);
                        viewHolder.videocontent.setVideoURI(video);
                        viewHolder.videocontent.start();
                        this.notifyDataSetChanged();
                        break;
                    }
                    case 3: {
                        viewHolder.imgvwcontent.setVisibility(View.VISIBLE);
                        viewHolder.txtvwcontent.setVisibility(View.INVISIBLE);
                        viewHolder.videocontent.setVisibility(View.INVISIBLE);

                        try {
                            Log.d(TAG, "Photo : " + dataModel.getPhoto().get(position));
                            viewHolder.imgedtimage.setVisibility(View.VISIBLE);
                            Picasso.with(context)
                                    .load(R.drawable.editimg1)
                                    .resize(50, 50)
                                    .into(viewHolder.imgedtimage);
                            this.notifyDataSetChanged();
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        break;
                    }
                }
------------------------------------------------------------------------------------------------------------------------
GridView Layout using BaseAdapter
Note : getCount() method of BaseAdapter class must return the length of the list/Array.   (don't return 0 or null)
========================================================================================================================

public class GridAdapter extends BaseAdapter
{
    private Context context;
    private int values[];
    public GridAdapter(Context context, int[] values)                //values contain lists of id(R.drawable.image1) of images
    {
        this.context = context;
        this.values = values;
    }
    @Override
    public int getCount() {
        return values.length;                                        //Always return the length of list or Array
    }

    @Override
    public Object getItem(int position) {
        return null;
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent)
    {
        LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View grid=null;
        if (convertView == null)
        {
            try {
                grid = new View(context);
                grid = inflater.inflate(R.layout.gridviewitems, null);

                ImageView imageView = (ImageView) grid.findViewById(R.id.grid_item_image);
                imageView.setImageResource(values[position]);
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        } else {
            grid = (View) convertView;
        }
        return grid;
    }
}

---------------------------------------------------------------------------------------------------------------------------------
Steps to draw an 9 patch image file
=================================================================================================================================
1)open Terminal in Android Studio
2)go to the dir cd F:\Venkatesh Materials\tools\Android Studio\AndroidStudio_sdk\tools>
3)type the command draw9patch
4)Drag the image to the tool
5)select File -->Save 9-patch (.9.png)
The Draw 9-patch tool is a WYSIWYG editor that allows you to create bitmap images that automatically resize 
to accommodate the contents of the view and the size of the screen. Selected parts of the image are scaled 
horizontally or vertically based indicators drawn within the image.

------------------------------------------------------------------------------------------------------------------------------------
By using BitMapFactory.options inJustDecodeBounds = true; we can avoid allocating space for the image before decoding.
and reduce the imagepixel to the specified height and width. Then allowing the Factory method to allocate space.
======================================================================================================================================


imageView.setImageBitmap(decodeSampledBitmapFromResource(context.getResources(), values[position], 100, 100));		//code where placing the image in Imageview

public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId,int reqWidth, int reqHeight) 
     {

        // First decode with inJustDecodeBounds=true to check dimensions
        final BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeResource(res, resId, options);

        // Calculate inSampleSize
        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);

        // Decode bitmap with inSampleSize set
        options.inJustDecodeBounds = false;
        return BitmapFactory.decodeResource(res, resId, options);
    }

public static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) 
   {
        // Raw height and width of image
        final int height = options.outHeight;
        final int width = options.outWidth;
        int inSampleSize = 1;

        if (height > reqHeight || width > reqWidth) {

            final int halfHeight = height / 2;
            final int halfWidth = width / 2;

            // Calculate the largest inSampleSize value that is a power of 2 and keeps both
            // height and width larger than the requested height and width.
            while ((halfHeight / inSampleSize) > reqHeight
                    && (halfWidth / inSampleSize) > reqWidth) {
                inSampleSize *= 2;
            }
        }

        return inSampleSize;
    }

------------------------------------------------------------------------------------------------------------------------------------------
Pull to refresh ListView
===========================================================================================================================================
steps for including library:
----------------------------
1) Download the Library from the URL as a zip file (https://github.com/chrisbanes/Android-PullToRefresh)
2) Extract it in a folder
3) File --> Import Project --> select the folder which you Extracted(so a new project Android-pulltorefresh is created)
4) From your current project app-->(Right click) New Module --> Import Existing project --> select the path like (F:\Loganathan\Android-PullToRefresh-master\library)
   (i.e: select the library folder) and click Ok
5) From your current project app-->(Right click) Open Module Settings-->(For the app) click + and add the included Module
6) Build and Sync the project


steps for using inbuilt pulltorefresh list view (in .xml file)
-------------------------------------------------------------

<android.support.v4.widget.SwipeRefreshLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/swipeContainer"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ListView
            android:id="@+id/langItems"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentLeft="true"
            android:layout_alignParentTop="true" >
        </ListView>

    </android.support.v4.widget.SwipeRefreshLayout>

    public class PulltoRefreshActivity extends Activity implements OnRefreshListener {
    SwipeRefreshLayout swipeLayout;
    String srcarray[];
    ListView listview;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_pullto_refresh);

        listview = (ListView) findViewById(R.id.langItems);
        srcarray = new String[]{"English", "Tamil","Maths","Science","Social","Physics","chemistry","Botany","Zoology","biology","Engg Graphics","BASICS","C/C++", "JAVA", "FOC"};
        swipeLayout = (SwipeRefreshLayout) findViewById(R.id.swipeContainer);
        swipeLayout.setOnRefreshListener(this);
        swipeLayout.setColorSchemeResources(android.R.color.holo_blue_bright, android.R.color.holo_green_light, android.R.color.holo_red_light);
    }

    public void onRefresh() {
        new Handler().postDelayed(new Runnable() {
            public void run() {
                ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(PulltoRefreshActivity.this, android.R.layout.simple_list_item_1, srcarray);
                listview.setAdapter(arrayAdapter);
                swipeLayout.setRefreshing(false);

            }
        }, 10000);
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------
Dynamically Creating TextView and placing in ListView below to (txtcommentcount) TextView from Java code
=============================================================================================================================================

		    int prevTextViewId = R.id.txtcommentcount;
                    if(commentcount>0)
                    {
                        int index = dataComment.getCommentDate().size();
                        for(int k=0; k<index; k++)
                        {
                            TextView txtuser = new TextView(MainActivity.this);					//Line where creating TextView
                            txtuser.setText("User :"+dataComment.getCUserName().get(k));
                            
                            int curTextViewId = prevTextViewId + 1;
                            
                            final RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,
                                            RelativeLayout.LayoutParams.WRAP_CONTENT);

                            params.addRule(RelativeLayout.BELOW, prevTextViewId);
                            txtuser.setLayoutParams(params);
                            layoutcomment.addView(txtuser, params);                            
                            prevTextViewId = newcurTextViewId;
                        }
                    }

To add an ImageView 
=====================
			    ImageView imageView = new ImageView(context);
                            Picasso.with(context)
                                    .load(dataComment.getCPhoto().get(k))
                                    .resize(50, 50)
                                    .into(imageView);
                            imageView.setId(curTextViewId);

                            final RelativeLayout.LayoutParams params2 =
                                    new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,
                                            RelativeLayout.LayoutParams.WRAP_CONTENT);

                            params2.addRule(RelativeLayout.BELOW, prevTextViewId);
                            imageView.setLayoutParams(params2);
                            layoutcomment.addView(imageView, params2);

---------------------------------------------------------------------------------------------------------------------------------------------------
CircularImage code using picasso library
===================================================================================================================================================
Download Library from : https://github.com/hdodenhof/CircleImageView
app-->Import project-->select the folder CircleImageView --> it will be added in your project
app --> Open Module Settings --> Dependencies --> + --> Module dependencies --> Select CircularImageView -->Apply --> OK

	In Respective .xml file
	
	    <com.mikhaellopez.circularimageview.CircularImageView
            android:id="@+id/imgvwtoppanel"
            android:layout_width="30dp"
            android:layout_height="match_parent"
            android:src="@drawable/image8"
            app:border="true"
            app:border_color="@color/white"
            app:border_width="1dp"
            app:shadow="true" />
	

	In Activity file
				     Picasso.with(context)
                                    .load(dataModel.getPhoto().get(position)) //path of image in SD card
                                    .resize(250, 150)
				    .error(R.raw.big_problem)
				    .noFade()
				    .centerCrop()
                                    .into(imgvwcontent);
                            this.notifyDataSetChanged();


Note the following:

ImageView – the image view that we return to display in one of the grid’s cells. We check if we can re-use the convertView. If not, we create a new image view
Picasso – we’re using the Picasso Library
with – the context of the Picasso instance
load – the image that we want to load into the grid cell
placeholder – a placeholder image that’s displayed while the required image is loaded
error – an image that displays if the requested image can’t be loaded
noFade – by default, the image fades in if loaded from the disc cache or from the network. We’ve disabled the fade-in
centerCrop – crops the image so it fits inside our dimensions
into – asynchronously loads the image into this image view


-----------------------------------------------------------------------------------------------------------------------------------------------------
Steps to generate key for google maps from developer console
=====================================================================================================================================================
1) https://console.developers.google.com/project
2) Craete a new project using the credentials (Gowri@eventurers.com/eventurers)
3) Select the project in the dropdown --> select API&auth --> Credentials -->Create new Key-->Android key
4) Copy the content from (google_maps_api.xml) and paste in the Textarea 
   A8:33:7E:AC:6F:60:78:3D:B0:A3:DD:53:96:48:6F:D0:A0:DA:EE:E4;android.eventurers.com.mapapps 		//Which is generated from the google_maps_api.xml file
5) It will generate a key like this (AIzaSyBFZTbcf-DD5Hh8M6aiQgCyFBGLDT9jRHw)

6) In AndroidManifest.xml file past the content as a child of <application> (i.e:before closing the </application> tag)
	<meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyBFZTbcf-DD5Hh8M6aiQgCyFBGLDT9jRHw"/>
7) In Activity File

public class MapsActivity extends Activity
{
    private GoogleMap googleMap; 	
    double latitude=11.954163, longitude=79.678310;

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);
	setUpMapIfNeeded();        
    }

    protected void onResume() {
        super.onResume();
        setUpMapIfNeeded();
    }

	private void setUpMapIfNeeded() {
        if (mMap == null) {
            mMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map)).getMap();	//From activity to get the Fragment Manager we are using getSupportFragmentManager()
            if (mMap != null)
            {
                gpsTracker = new GPSTracker(MapsActivity.this);
                if(gpsTracker.canGetLocation())
                {
                    double lat = gpsTracker.getLatitude();
                    double lon = gpsTracker.getLongitude();
                    LatLng latLng = new LatLng(lat, lon);
                    mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
                    mMap.animateCamera(CameraUpdateFactory.zoomTo(8));
                    MarkerOptions marker = new MarkerOptions().position(new LatLng(lat, lon)).title("My Location");
                    mMap.addMarker(marker);
                    mMap.setMyLocationEnabled(true);
                    mMap.getUiSettings().setZoomControlsEnabled(true);
                }
            }
        }
    }
}

reference : http://www.androidhive.info/2013/08/android-working-with-google-maps-v2/
-------------------------------------------------------------------------------------------------------------------------------------------------------
Code to Move the Visible area to the user in google Maps to a particular position
=======================================================================================================================================================

 	MarkerOptions marker1 = new MarkerOptions().position(new LatLng(lat, lng)).title(address);
              mMap.addMarker(marker1);
              mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
              mMap.animateCamera(CameraUpdateFactory.zoomTo(4));
-------------------------------------------------------------------------------------------------------------------------------------------------------
Google Map get Latitude & Longitude for the given address
=======================================================================================================================================================

public LatLng getLocationFromAddress(strAddress) {

    Geocoder coder = new Geocoder(MainActivity.this);
    List<Address> address;
    LatLng p1 = null;

    try {
        address = coder.getFromLocationName(strAddress, 5);
        if (address == null) {
            return null;
        }
        Address location = address.get(0);
        double latitude = location.getLatitude();
        double longitude = location.getLongitude();

        p1 = new LatLng(latitude, longitude);

    } catch (Exception ex) {

        ex.printStackTrace();
    }

    return p1;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------
Google Map get Address using Latitude/Longitude (or) Based on user Click position in the Map
=======================================================================================================================================================

class MapsActivity extends Activity implements GoogleMap.OnMapLongClickListener{

public void onMapLongClick(LatLng click)
    {
        Geocoder geocoder = new Geocoder(MapsActivity.this);
        double latitude = click.latitude;
        double longitude = click.longitude;
        String userclicklocation="";
        List<Address> addresses;
        try {
            addresses = geocoder.getFromLocation(latitude, longitude, 1);   //1 represent number of result to be taken
            if(addresses.size()>0)
            {
                Address address = addresses.get(0);
                StringBuilder sb = new StringBuilder();
                String locality = address.getLocality();
                if(!locality.equals(null))
                    sb.append(locality).append("\n");
                sb.append(address.getAdminArea()).append("\n");
                sb.append(address.getCountryName());
                userclicklocation = sb.toString();
            }
            MarkerOptions marker1 = new MarkerOptions().position(new LatLng(latitude, longitude)).title(userclicklocation.toString());
            mMap.addMarker(marker1);
            mMap.setMyLocationEnabled(true);
        }
        catch(Exception e)
        {
            Log.d(TAG, "Exception :"+e);
        }
    }

}
-------------------------------------------------------------------------------------------------------------------------------------------------------
Simple code for finding and Tracking Location using GPS (Switch ON the GPS in the Device)
=======================================================================================================================================================
public class MainActivity extends Activity implements LocationListener
{

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        LocationManager locationManager = (LocationManager)this.getSystemService(Context.LOCATION_SERVICE);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,5*1000,1,this);
    }

    @Override
    public void onLocationChanged(Location location) {

        Log.d("Latitude:", ""+location.getLatitude());
        Log.d("Longitude:", ""+location.getLongitude());
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------
Steps to load an video on VideoView using MediaController class
=======================================================================================================================================================
MediaController class is an View, The way to use this class is to instantiate it programatically. 
The MediaController will create a default set of controls and put them in a window floating above your application. 
Specifically, the controls will float above the view specified with setAnchorView(). 
The window will disappear if left idle for three seconds and reappear when the user touches the anchor view.

MediaController mediaController = new MediaController(context);
                        mediaController.setAnchorView(videocontent);
                        Uri video = Uri.parse("http://download.itcuties.com/teaser/itcuties-teaser-480.mp4#sthash.QexCap8v.dpuf");
                        videocontent.setMediaController(mediaController);
                        videocontent.setVideoURI(video);
                        videocontent.start();
                        this.notifyDataSetChanged();
----------------------------------------------------------------------------------------------------------------------------------------------------------
Universal Image Loader Library
==========================================================================================================================================================
Asynchronous and multi-threaded image loading powerful library that helps in loading, caching and displaying images on Android. 
This allows you to download multiple images Asynchronously.

Refer :http://www.101apps.co.za/articles/gridview-tutorial-using-the-universal-image-loader-library.html

Steps
=====
1)  Add the jar(universal-image-loader-1.9.4-with-sources.jar) file into the libs folder of your project 
2)  In the "Open Module Settings" Select the file dependency and include the jar file which u added
3)  In the java code

   	DisplayImageOptions options = new DisplayImageOptions.Builder()
                .cacheOnDisc(true).cacheInMemory(true)
                .imageScaleType(ImageScaleType.EXACTLY)
                .displayer(new FadeInBitmapDisplayer(300)).build();

        ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(
                getApplicationContext())
                .defaultDisplayImageOptions(options)
                .memoryCache(new WeakMemoryCache())
                .discCacheSize(100 * 1024 * 1024).build();

        ImageLoader.getInstance().init(config);
        ImageLoader imageLoader = ImageLoader.getInstance();
        String url = "http://javatechig.com/wp-content/uploads/2014/05/UniversalImageLoader-620x405.png";   //url where the image is available

        ImageView imageView = (ImageView) findViewById(R.id.imageview1);

        imageLoader.displayImage(url, imageView, options);		//Download and display image from URL

	imageLoader.displayImage("drawable://"+getphoto[position], imageView, options);    //Display from the application
----------------------------------------------------------------------------------------------------------------------------------------------------------
Popup Menu listing the items
==========================================================================================================================================================

A PopupMenu displays a Menu in a modal popup window anchored to a View(Button/EditText/....)
The popup will appear below the anchor view if there is room, or above it if there is no room below the View 
If the IME is visible the popup will not overlap it until it is touched. 
Touching outside of the popup will dismiss it.

res/Menu/popupmenu.xml
----------------------
<menu xmlns:android="http://schemas.android.com/apk/res/android">

    <item android:id="@+id/Fruits"
     android:title="Fruits"/>

    <item android:id="@+id/Vegetables"
        android:title="Vegetables"/>

    <item android:id="@+id/Desserts"
        android:title="Desserts"/>

    <item android:id="@+id/DryFruits"
        android:title="Dry Fruits"/>
</menu>

 button1 = (Button) findViewById(R.id.button1);
        button1.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                PopupMenu popup = new PopupMenu(PopupMenuActivity.this, button1);   //Constructor(Context, Anchor)
                popup.getMenuInflater().inflate(R.menu.popupmenu, popup.getMenu());
                popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                    @Override
                    public boolean onMenuItemClick(MenuItem item)
                    {
                        Toast.makeText(PopupMenuActivity.this, "You have selected : "+item.getTitle(),Toast.LENGTH_LONG).show();
                        return true;
                    }
                });
                popup.show();
            }
        });

Read more at http://javabeginnerstutorial.com/uncategorized/how-to-create-popups-in-android-2/#upcBP24pm57pPuz6.99
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Popup Window
===========================================================================================================================================================
Popup Window is useful and convenient in cases when you want to display an additional information, but don’t want or 
it’s not appropriate to launch a new activity or display a dialogue


-----------------------------------------------------------------------------------------------------------------------------------------------------------
Inlcuding  Action Bar in the Activity
===========================================================================================================================================================
1) Default ActionBar (Do the change in AndroidManifest.xml file)

	<activity
            android:name=".MapsActivity"
            android:label="My Action Bar"
            android:theme="@android:style/Theme.Holo.Light">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

2) Customized ActionBar

	AndroidManifest.xml file
	------------------------
	<activity
            android:name=".MapsActivity"
            android:label="My Action Bar"
            android:theme="@android:style/Theme.Holo.Light">			//This line is must, without this line you will get a null pointer exception
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

    actionbar.xml    (res/drawable/layout/actionbar.xml)
    --------------
    <?xml version="1.0" encoding="utf-8"?>
    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="50dp"
    android:background="#339934" >
	
    <TextView
        android:id="@+id/title_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:textAllCaps="true"
        android:textAppearance="?android:attr/textAppearanceLarge"
        android:textColor="#fff"
        android:text="Custom Maps Action Bar"
        android:textStyle="bold" />

    <ImageView
        android:id="@+id/imageView1"
        android:layout_width="35dp"
        android:layout_height="35dp"
        android:layout_alignParentLeft="true"
        android:layout_centerVertical="true"
        android:layout_marginLeft="8dp"
        android:src="@android:drawable/ic_menu_rotate" />	

    In onCreate() method
    ---------------------

 	ActionBar mActionBar = getActionBar();
        mActionBar.setDisplayShowHomeEnabled(false);
	mActionBar.setDisplayShowCustomEnabled(true);
        mActionBar.setDisplayShowTitleEnabled(false);
	mActionBar.setBackgroundDrawable(new ColorDrawable(Color.parseColor("#7E92A7")));		//For ActionBar Background Color
        mActionBar.setStackedBackgroundDrawable(new ColorDrawable(Color.parseColor("#bacde2")));	//For Tabs attached below to ActionBar background Color


        LayoutInflater mInflater = LayoutInflater.from(this);

        View mCustomView = mInflater.inflate(R.layout.actionbar, null);
        mActionBar.setCustomView(mCustomView);
        mActionBar.setDisplayShowCustomEnabled(true);
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Animation in Android
===========================================================================================================================================================
1)   create an slideup.xml file under res/anim folder

2)   <?xml version="1.0" encoding="utf-8"?>
     <set xmlns:android="http://schemas.android.com/apk/res/android"
      android:interpolator="@android:anim/linear_interpolator">
      <translate
        android:fromXDelta="30%p"
        android:toXDelta="30%p"
        android:fromYDelta="110%p"
        android:toYDelta="44%p"/>
     </set>

3)      Animation animation;
	protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_entry);

        txtmessage = (TextView) findViewById(R.id.txtentry1);
        animation = AnimationUtils.loadAnimation(EntryActivity.this, R.anim.slideup);     //R.anim.slideup ---> above specified xml file
        animation.setDuration(2000);
        animation.setFillAfter(true);
        txtmessage.startAnimation(animation);
        animation.setAnimationListener(new AnimationListener() {
                                           @Override
                                           public void onAnimationStart(Animation animation) {

                                           }

                                           @Override
                                           public void onAnimationEnd(Animation animation)
                                           {
                                               try {
                                                   Thread.sleep(2000);
                                                   intent = new Intent(EntryActivity.this, MapsActivity.class);
                                                   startActivity(intent);
                                               }
                                               catch (Exception e)
                                               {
                                                   Log.d(TAG, "Main Thread Waiting"+e);
                                               }
                                           }

                                           @Override
                                           public void onAnimationRepeat(Animation animation)
                                           {
                                           }
                                       });
    }

http://www.androidhive.info/2013/06/android-working-with-xml-animations/#slide_up
----------------------------------------------------------------------------------------------------------------------------------------------------------
Calling Intent from a Broadcast Receiver
==========================================================================================================================================================
intent = new Intent(context, MapsActivity.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(intent);
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Including Fragment in an Activity and passing data / replacing fragment
===========================================================================================================================================================

activitylayout.xml file

	<fragment
        android:name="autopin.user.me.androiduis.ItemFragment"	//This line is must for a fragment
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgheading"
        android:id="@+id/fragment1"/>

Activity.java file

	public void getFragment(View view)
    	{
        FragmentTransaction fragmentTransaction;
        FragmentManager fragmentManager;
        Fragment fragment= new ItemFragment();	//An Fragment class or an Activity class which extends Fragment Class

	Bundle bundle = new Bundle();
        bundle.putString("values", str);
	fragment1 = new FragmentOne();
	fragment1.setArguments(bundle);					//Setting the Arguments

        fragmentManager = getFragmentManager();
        fragmentTransaction = fragmentManager.beginTransaction();
        fragmentTransaction.replace(R.id.fragment1, fragment);
        fragmentTransaction.addToBackStack(null);
        fragmentTransaction.commit();
   	}

FragmentOne.java file
	
	final String value = getArguments().getString("values");	//Getting the Arguments
        txtdata.setText(value);
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 FrameLayout & CoordinatorLayout
======================================================================================================================================================================

 FrameLayout can hold only one child layout.

 CoordinatorLayout is a super-powered FrameLayout.

 CoordinatorLayout is intended for two primary use cases:

    As a top-level application decor or chrome layout
    As a container for a specific interaction with one or more child views

 By specifying Behaviors for child views of a CoordinatorLayout you can provide many different interactions within a single parent and those views can 
 also interact with one another. View classes can specify a default behavior when used as a child of a CoordinatorLayout using the DefaultBehavior annotation.

 Behaviors may be used to implement a variety of interactions and additional layout modifications ranging from sliding drawers and panels to swipe-dismissable 
 elements and buttons that stick to other elements as they move and animate.

 Children of a CoordinatorLayout may have an anchor. This view id must correspond to an arbitrary descendant of the CoordinatorLayout, 
 but it may not be the anchored child itself or a descendant of the anchored child. This can be used to place floating views relative to other arbitrary content panes.


 For more info : https://lab.getbase.com/introduction-to-coordinator-layout-on-android/

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Navigation using DrawerLayout 
======================================================================================================================================================================
The navigation drawer is a panel that displays the app’s main navigation options on the left edge of the screen. It is hidden most of the time, 
but is revealed when the user swipes a finger from the left edge of the screen

To add a navigation drawer, declare your user interface with a DrawerLayout object as the root view of your layout. 
Inside the DrawerLayout, add one view that contains the main content for the screen (your primary layout when the drawer is hidden) 
and another view that contains the contents of the navigation drawer.

activity_main.xml file
----------------------
<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!-- Framelayout to display Fragments-->
    <FrameLayout
        android:id="@+id/frame_container"
        android:layout_width="match_parent"
        android:transitionName="android.eventurers.com.slidingmenu.fragment_home"
        android:layout_height="match_parent"/>

    <!-- Listview to display slider menu -->
    <ListView
        android:id="@+id/list_slidermenu"
        android:layout_width="240dp"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:choiceMode="singleChoice"
        android:divider="@color/list_divider"
        android:dividerHeight="1dp"
        android:listSelector="@drawable/list_selector"
        android:background="@color/list_background"/>
    </android.support.v4.widget.DrawerLayout>

Main_Activity.java
------------------
public void onCreate(Bundle savedInstanceState) {
        ...

        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        mDrawerToggle = new ActionBarDrawerToggle(
                this,                  /* host Activity */
                mDrawerLayout,         /* DrawerLayout object */
                R.drawable.ic_drawer,  /* nav drawer icon to replace 'Up' caret */
                R.string.drawer_open,  /* "open drawer" description */
                R.string.drawer_close  /* "close drawer" description */
                ) {

            /** Called when a drawer has settled in a completely closed state. */
            public void onDrawerClosed(View view) {
                super.onDrawerClosed(view);
                getActionBar().setTitle(mTitle);
            }

            /** Called when a drawer has settled in a completely open state. */
            public void onDrawerOpened(View drawerView) {
                super.onDrawerOpened(drawerView);
                getActionBar().setTitle(mDrawerTitle);
            }
        };

        // Set the drawer toggle as the DrawerListener
        mDrawerLayout.setDrawerListener(mDrawerToggle);

        getActionBar().setDisplayHomeAsUpEnabled(true);
        getActionBar().setHomeButtonEnabled(true);
    }
   
Refer : Sliding Menu Android Project
--------------------------------------------------------------------------------------------------------------------------------------------------------
Using Material Design in APPS
=========================================================================================================================================================
Intorduced in Lollipop(5.0)(API Level 21) and above 

Material
--------
The material environment is a 3D space, which means all objects have x, y, and z dimensions. 
The z-axis is perpendicularly aligned to the plane of the display, with the positive z-axis extending towards the viewer. 
Every sheet of material occupies a single position along the z-axis and has a standard 1dp thickness

Material Properties
-------------------
1) Material has varying x & y dimensions (measured in dp) and a uniform thickness (1dp).
2) Material casts shadows. Shadows result naturally from the relative elevation (z-position) between material elements
3) Content is displayed on material, in any shape and color. Content does not add thickness to material.
4) Content can behave independently of the material, but is limited within the bounds of the material.
5) Material is solid. Input events cannot pass through material. Input events only affect the foreground material.
6) Multiple material elements cannot occupy the same point in space simultaneously.Using elevation to separate material elements is 
   one method of preventing multiple material elements from occupying the same point in space simultaneously.
7) Material cannot pass through other material.For example, one sheet of material cannot pass through another sheet of material when changing elevation.
8) Material can Change Shape. Material grows and shrinks only along its plane. Material never bends or folds. Sheets of material can join together to become a single sheet of material.
9) When split, material can heal. For example, if you remove a portion of material from a sheet of material, the sheet of material will become a whole sheet again.
10) Material can be spontaneously generated or destroyed anywhere in the environment.
11) Material can move along any axis.

Elevation
=========

Elevation is the relative depth, or distance, between two surfaces along the z-axis.
The size of the shadow: 	views with higher Z values cast bigger shadows.
The drawing order: 		views with higher Z values appear on top of other views.

---> Objects in material design possess similar qualities to objects in the physical world. 
---> In the physical world, objects can be stacked or affixed to one another, but cannot pass through each other. Objects cast shadows and reflect light.
---> All material objects, regardless of size, have a resting elevation or default elevation, that does not change. If an object changes elevation, 
     it should return to its resting elevation as soon as possible
---> All the Child inherits parents Elevation, Shadow, Co-ords.
---> Shadows are drawn by the parent of the elevated view, and thus subject to standard view clipping, clipped by the parent by default.

To create apps with material design:
-----------------------------------
1)Review the material design specification.
2)Apply the material theme to your app.
3)Create your layouts following material design guidelines.
4)Specify the elevation of your views to cast shadows.
5)Use system widgets for lists and cards.
6)Customize the animations in your app.

Create your layout files for Android 5.0 (API level 21) inside res/layout-v21/ and your alternative layout files for earlier versions of Android inside res/layout/. 
For example, res/layout/my_activity.xml is an alternative layout for res/layout-v21/my_activity.xml.

To avoid duplication of code, define your styles inside res/values/, modify the styles in res/values-v21/ for the new APIs, 
and use style inheritance, defining base styles in res/values/ and inheriting from those in res/values-v21/.

Animation
=========
---> Changes in Object acceleration or deceleration should be smooth across the duration of an animation.
---> DO's  Changes in the ball’s speed emphasize its arrival at and departure from the resting position. Attention is minimized when the ball enters and exits the frame at a near-constant speed.
---> DONT's Speeding up when entering, and slowing down when exiting, can draw unwanted attention and distract the user.
---> Not all objects move the same way. Lighter or smaller objects may move faster because they require less force, and larger or heavier objects may need more time to speed up.
---> When a user triggers the creation of new material, it should grow in size starting from the point of input, Not from the center of Page.
---> When a card or separable element is activated, the card should lift to indicate an active state.(move on z-axis)
---> When building a transition, consider the order and timing of element movement (Use overlapping motion to direct user attention)
---> Transitioning elements should behave in a coordinated manner. The paths elements travel along should make sense and be orderly. Haphazard motion is distracting.
---> The most basic use of animation is in transitions, but an app can truly delight a user when animation is used in ways beyond the obvious. 
     A menu icon that becomes an arrow or playback controls that smoothly change from one to the other serve dual functions
     (Icons can smoothly change from one image to another to serve dual functions at different times.)

Style
=====
---> Toolbars and larger color blocks should use the 500 color of the primary color of your app. The status bar should be the darker 700 tint of your primary color.
---> Use the accent color for your primary action button and components like switches or sliders. (Accent - pink #ff4081)
---> Use the accent color only for a web link body text. not for entire paragraph (or) body text
---> Color elements are flush to the paper’s surface. Don’t embellish color elements with any edges or shadows.
---> Don’t exceed more than two overlaps. Having too many complicates the icon and lacks focus.
---> Stay away from stock, Use imagery to express a distinctive voice and exemplify creative excellence. (Avoid photos taken with proper position, Use Natural photos)
---> Make sure your images are appropriately sized for displays and across platforms. Material design emphasizes large images. 
---> Within a gallery context, introduce thumbnails of various sizes to convey content hierarchy

CardView Layout
===========
---> Android CardView is such a view which has all material design properties
---> it extends FrameLayout
---> it has rounded corners, For Compatability a padding is added to the image to prevent the overlapping corners
---> setContentPadding(int, int, int, int)- Setting padding for all the views in the content
---> setCardElevation(float)- Setting the Card Elevation

Button
======
Raised Button - Button with corner dimensions
Flat Button - Button with only Text no corners  (Used for toolbars and dialogs to avoid excessive layering)
FAB - Circular button that floats over another view/ Card Layout

Floating action button:  A circular material button that lifts and displays an ink reaction on press.
Raised button:           A typically rectangular material button that lifts and displays ink reactions on press.
Flat button:             A button made of ink that displays ink reactions on press but does not lift.

Themes
=======
The material theme is defined as:

    @android:style/android:Theme.Material (dark version)
    @android:style/android:Theme.Material.Light (light version)
    @android:style/android:Theme.Material.Light.DarkActionBar



For Reference : http://www.androidhive.info/2015/04/android-getting-started-with-material-design/
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Setting Elevation in Material Design for a ImageView
===========================================================================================================================================================

	findViewById(R.id.raise).setOnClickListener(this);
        findViewById(R.id.lower).setOnClickListener(this);   //in onCreate Method

  public void onClick(View v) {
        int elevation = Integer.parseInt(((TextView) findViewById(R.id.label)).getText().toString());    //TextField with Inital Value is 0 (zero)
        if (v.getId()==R.id.raise) {
            elevation+=5;
        } else {
            elevation-=5;
        }
        if (elevation<0) {
            elevation=0;
        } else if (elevation>100) {
            elevation=100;
        }
         findViewById(R.id.img).setElevation(elevation);						//place where we are setting the elevation for an imageview
        ((TextView) findViewById(R.id.label)).setText(Integer.toString(elevation));
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Recycler View / Recyclerview 
==============================================================================================================================================================

--   RecyclerView is part of the support library, so no need for any library

     Needs 3 methods and one LayoutManager from the 3 Layout Managers. 

	1) public void onBindViewHolder(EventViewHolder holder, int position)
	2) public EventViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
	3) public int getItemCount()


    RecyclerView provides these built-in layout managers:

    	LinearLayoutManager :	shows items in a vertical or horizontal scrolling list.
    	GridLayoutManager 	:	shows items in a grid.
    	StaggeredGridLayoutManager: shows items in a staggered grid.

	LinearLayoutManager recycleManager = new LinearLayoutManager(getActivity());			//Setting the LayoutManager for RecyclerView is must
        recycleManager.setOrientation(LinearLayoutManager.VERTICAL);
        recyclerViewList.setHasFixedSize(true);
        recyclerViewList.setLayoutManager(recycleManager);

    For more info refer: http://www.grokkingandroid.com/first-glance-androids-recyclerview/

activity_main.xml
-----------------

	<android.support.v7.widget.RecyclerView
        android:id="@+id/calendar_events_list"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scrollbars="vertical"/>

calendar_events.xml
-------------------
	<RelativeLayout
            android:layout_width="fill_parent"
            android:layout_height="fill_parent"
            android:background="#b3c17f">

            <TextView
                android:id="@+id/textView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textStyle="bold"
                android:layout_alignParentTop="true"/>

            <TextView
                android:id="@+id/textView2"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="10dp"
                android:layout_below="@+id/textView"/>
        </RelativeLayout>

CalendarFragment.java
---------------------

class CalendarFragment
{
private RecyclerView eventList;
private ArrayList eventDetailList;

private void init()
{
	eventList = (RecyclerView)view.findViewById(R.id.calendar_events_list);
}

private void setupDefaults()
{
        LinearLayoutManager recycleManager = new LinearLayoutManager(getActivity());			//Setting the LayoutManager for RecyclerView is must
        recycleManager.setOrientation(LinearLayoutManager.VERTICAL);
        eventList.setHasFixedSize(true);
        eventList.setLayoutManager(recycleManager);
        eventDetailList = new ArrayList<>();
}
private void setAdapter()
{
  	eventList.setAdapter(new CalendarEventAdapter(eventDetailList));
}
class CalendarEvent											//Inner class for Events
    {
        public String eventName;
        public String eventDate;
        public String eventStartTime;
        public String eventEndTime;

        CalendarEvent(String eveName, String eveDate, String eveSTime, String eveEndTime)
        {

            this.eventName = eveName;
            this.eventDate = eveDate;
            this.eventStartTime = eveSTime;
            this.eventEndTime = eveEndTime;
        }
    }
}


CalendarEventAdapter.java
--------------------------

public class CalendarEventAdapter extends RecyclerView.Adapter<CalendarEventAdapter.EventViewHolder>
{
    private ArrayList<CalenderFragment.CalendarEvent> eventList;

    public CalendarEventAdapter(ArrayList<CalenderFragment.CalendarEvent> eventList)
    {
        this.eventList = eventList;
    }

    @Override
    public EventViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.calendar_events, parent, false);
        return new EventViewHolder(view);
    }

    @Override
    public void onBindViewHolder(EventViewHolder holder, int position) {

        CalenderFragment.CalendarEvent singleEvent = eventList.get(position);
        PrintLog.debug("", " Single Event "+ singleEvent);
        if(holder != null) {
            holder.txtEventName.setText(singleEvent.eventName);
            holder.txtEventDate.setText(singleEvent.eventDate);
            holder.txtEventSTime.setText(singleEvent.eventStartTime);
            holder.txtEventETime.setText(singleEvent.eventEndTime);
        }
        else
        {
            PrintLog.debug("", " Holder"+holder);
        }
    }

    @Override
    public int getItemCount() {
        return eventList.size();
    }

    static class EventViewHolder extends RecyclerView.ViewHolder					//ViewHolder class
    {
        UsuTextView txtEventName, txtEventDate, txtEventSTime, txtEventETime;

        public EventViewHolder(View itemView)
        {
            super(itemView);
            txtEventName = (UsuTextView)itemView.findViewById(R.id.txt_event_name);
            txtEventDate = (UsuTextView)itemView.findViewById(R.id.txt_event_date);
            txtEventSTime = (UsuTextView)itemView.findViewById(R.id.txt_event_start_time);
            txtEventETime = (UsuTextView)itemView.findViewById(R.id.txt_event_end_time);
        }
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------
Drawing Shapes using OpenGL ES API
==========================================================================================================================================================
---> The OpenGL ES 2.0 APIs provided by the Android framework offers a set of tools for displaying high-end, animated graphics 
---> Be careful not to mix OpenGL ES 1.x API calls with OpenGL ES 2.0 methods! The two APIs are not interchangeable

Steps to draw graphics with OpenGL ES
-------------------------------------
1) Create a View Container for to draw Graphics (in Full Screen / Near Full Screen)

2) Implement both a GLSurfaceView and a GLSurfaceView.Renderer
   A GLSurfaceView is a view container for graphics drawn with OpenGL 
   GLSurfaceView.Renderer controls what is drawn within that view 

   Use TextureView  (graphics in a small portion of their layouts)
3) Declare OpenGL ES in the manifest file as below
   <uses-feature android:glEsVersion="0x00020000" android:required="true" />

4) Create an Activity for OpenGL ES Graphics (In activity along with Button, TextField add a GLSurfaceView also)

    public class OpenGLES20Activity extends Activity 
    {
    private GLSurfaceView mGLView;
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        mGLView = new MyGLSurfaceView(this);
        setContentView(mGLView);
    }
    }

5)  GLSurfaceView doesn't do much work, The drawing of object is controlled in GLSurfaceView.Renderer
    You have to extend the GLSurfaceView class to Track the Touch Events

    class MyGLSurfaceView extends GLSurfaceView {

    private final MyGLRenderer mRenderer;

    public MyGLSurfaceView(Context context){
        super(context);

        // Create an OpenGL ES 2.0 context
        setEGLContextClientVersion(2);

        mRenderer = new MyGLRenderer();

        // Set the Renderer for drawing on the GLSurfaceView
        setRenderer(mRenderer);
    }
    }

6)  Building a Renderer class
    There are three methods in a renderer that are called by system in order to figure out what and how to draw on a GLSurfaceView
    onSurfaceCreated() - Called once to set up the view's OpenGL ES environment.
    onDrawFrame() - Called for each redraw of the view.
    onSurfaceChanged() - Called if the geometry of the view changes, for example when the device's screen orientation changes.

    public class MyGLRenderer implements GLSurfaceView.Renderer {

    public void onSurfaceCreated(GL10 unused, EGLConfig config) {
        // Set the background frame color
        GLES20.glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
    }

    public void onDrawFrame(GL10 unused) {
        // Redraw background color
        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);
    }

    public void onSurfaceChanged(GL10 unused, int width, int height) {
        GLES20.glViewport(0, 0, width, height);
    }
}	

7) Create a Class for the respective Shape with all the co-ordinates and color details
8) In Shape Class you need atleast one vertex shader to draw a shape and one fragment shader to color that shape.

   private final String vertexShaderCode =
            "attribute vec4 vPosition;" +"void main() {" +"  gl_Position = vPosition;" +"}";

    private final String fragmentShaderCode =
            "precision mediump float;" + "uniform vec4 vColor;" + "void main() {" +"  gl_FragColor = vColor;" + "}";

Refer app: Drawing with OpenGL ES
---------------------------------------------------------------------------------------------------------------------------------------------------------
Drawing Custom Shapes with Canvas
=========================================================================================================================================================
---> In any App, Drawing and control the animation of graphics, you should do so by drawing through a Canvas
---> Canvas works as an Interface, it holds all of your "draw" calls.
---> onDraw() provides Canvas and Place the drawing on it.
---> The Bitmap is always required for a Canvas. You can set up a new Canvas like this:

	Bitmap b = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888);
	Canvas c = new Canvas(b);

---> Canvas has its own Drawing methods like drawBitMap(), drawRect(), drawText()	
---> View.onDraw() provides a pre-defined Canvas to which you will place your drawing calls.(e.g: Chess game, Snake ladder game)
---> The android.graphics.drawable package is where you'll find the common classes used for drawing in two-dimensions.


For the Below Program Supply the Arguments in Bundle (Mentioned in the code) from the MainActivity.java

	bundle.putString(action, "arrow");
        fragment.setArguments(bundle);
    
public class Drawablefragment extends Fragment implements View.OnTouchListener {

    private float x, x1, length=0;
    private float y, y1, a ,b;
    private String action, shape="";
    private android.widget.RelativeLayout.LayoutParams layoutParams;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,Bundle savedInstanceState)
    {
        View rootView = inflater.inflate(R.layout.fragment_drawablefragment, container, false);
        MyCustomPanel view = new MyCustomPanel(getActivity());
        ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 1000);
        getActivity().addContentView(view, params);
        view.setOnTouchListener(this);
        if(getArguments()!=null) {
            action = getArguments().getString("action");
            Toast.makeText(getActivity().getApplicationContext(), action, Toast.LENGTH_LONG).show();
        }
        return inflater.inflate(R.layout.fragment_drawablefragment, container, false);
    }
    private class MyCustomPanel extends View {

        public MyCustomPanel(Context context) {
            super(context);

        }
        @Override
        public void draw(Canvas canvas)
        {
            Paint paint = new Paint();
            paint.setStyle(Paint.Style.STROKE);
            paint.setStrokeWidth(4f);
            paint.setColor(Color.RED);
            if(action == "circle")
                canvas.drawCircle(a, b, length, paint);
            if(action == "rect")
                canvas.drawRect(x,y,x1,y1,paint);
            if(action == "line")
                canvas.drawLine(x,y,x1,y1,paint);
            if(action == "arrow")
            {
                canvas.drawOval(x,y,x1,y1, paint);
//              Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.arrow);
//              canvas.drawBitmap(bitmap, x, y, paint);
            }
        }
    }

    public boolean onTouch(View v, MotionEvent event)
    {
        int maskedAction = event.getActionMasked();
        switch (maskedAction) {
            case MotionEvent.ACTION_DOWN:
            case MotionEvent.ACTION_POINTER_DOWN: {
                a=b=0;
                a= x = x1= event.getX();
                b= y = y1= event.getY();

                break;
            }
            case MotionEvent.ACTION_MOVE: {
                x1 = event.getX();
                y1 = event.getY();

                if(x1>x || y1>y) {
                    a = (x1 - (x1 - x) / 2);
                    b = (y1 - (y1 - y) / 2);
                    length = Math.max((x1 - x)/2, (y1 - y)/2);
                }
                if(x>x1 || y>y1)
                {
                    a = (x - (x-x1) / 2);
                    b = (y - (y-y1) / 2);
                    length = Math.max((x - x1)/2, (y - y1)/2);
                }
                break;
            }
            case MotionEvent.ACTION_UP:
            case MotionEvent.ACTION_POINTER_UP:{
                x1 = event.getX();
                y1 = event.getY();
                break;
            }
        }
        v.invalidate();
//        System.out.println("x: "+x+" y: "+y+" xdiff: "+(x1-x)+" ydiff: "+(y1-y)+" x1: "+x1+" y1: "+y1+" Length: "+ length);
        return true;
    }
}

REF : Full Project is available in Shared Trainee folder "Drawing with Canvas" 

----------------------------------------------------------------------------------------------------------------------------------------------------------
PictureChooseLib-Master project (From Github)

Open --> gradle-mvn-push.gradle file --> In Bottom there is a block

  bintray{



         } 

 From this block remove the User and Key (First 2 lines)
-----------------------------------------------------------------------------------------------------------------------------------------------------------
IandMyDoctor app
===========================================================================================================================================================
1)Getting the project Source from the Share drive

	a) Download the project from the share drive ("\\172.21.4.72\Trainees\2.Venkatesh\2015\Aug") to local system.
	   
	b) Open the File in "Values/app_ids.xml" Change the key value by generating new API key.
	https://console.developers.google.com/project/ --> Add Credentials --> API key --> Android Key --> Click Create 

	c) It will generate the key, Copy the key and paste as like this in Values/app_ids.xml file
	<string name="google_map_api_key">AIzaSyD1MkJtLZUER4lNxMVQP8syZpGyYqhnd3A</string>

2) Playstore Installation on genymotion

	1) Download the ARM Translation Installer v1.1(ARMTI) (or) (\\172.21.4.72\Trainees\2.Venkatesh\2015\Aug\Genymotion-ARM-Translation_v1.1)

	2) Download the Google Apps for your Android version 4.4, 4.3, 4.2, or 4.1 for instance (or) (\\172.21.4.72\Trainees\2.Venkatesh\2015\Aug\4.4\gapps-kk-20140105-signed)

	3) Drag and drop the ARMTI to the HomeScreen of your emulator, and confirm all

	4) reboot your emulator

	5) Drag & Drop the correct Google App version to your HomeScreen

	6) Reboot your emulator

	7) JOB DONE.
	note : downloaded folder is availabe

	http://inthecheesefactory.com/blog/how-to-install-google-services-on-genymotion/en


3) Run the project.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Expandable List View using BaseExapandableListAdapter  //Passing HashMap(List<Trip class>, List<String>) to the adapter class
=================================================================================================================================================================


 	listView = (ExpandableListView) view.findViewById(R.id.list_details);
        headerlist = new ArrayList<Trip>();
        Child_data = getvalueforItems();
        DataAdapter dataAdapter = new DataAdapter(getActivity(), headerlist, Child_data, listView);
        listView.setAdapter(dataAdapter);


public class DataAdapter extends BaseExpandableListAdapter
{
    private Context context;
    private List<Trip> header;
    private ExpandableListView listView;
    private HashMap<Trip, List<String>> triplist;
    private int lastExpandedPosition = -1;

    DataAdapter(Activity activity, List<Trip> header, HashMap<Trip, List<String>> triplist, ExpandableListView listView)
    {
        context = activity;
        this.header = header;
        this.triplist = triplist;
        this.listView = listView;
    }

    @Override
    public int getGroupCount() {
        return this.header.size();
    }

    @Override
    public int getChildrenCount(int groupPosition) {
        return this.triplist.get(this.header.get(groupPosition)).size();
    }

    @Override
    public Object getGroup(int groupPosition) {
        return this.header.get(groupPosition);
    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {
        return this.triplist.get(this.header.get(groupPosition)).get(childPosition);
    }

    @Override
    public long getGroupId(int groupPosition) {
        return groupPosition;
    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return childPosition;
    }

    @Override
    public boolean hasStableIds() {
        return false;
    }

    @Override
    public void onGroupExpanded(int groupPosition) {
        super.onGroupExpanded(groupPosition);
        if(lastExpandedPosition != -1 && groupPosition != lastExpandedPosition) {
            listView.collapseGroup(lastExpandedPosition);
        }
        lastExpandedPosition = groupPosition;
    }

    @Override
    public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)
    {

        final Trip tripdetail = (Trip) getGroup(groupPosition);

        String date = tripdetail.date;
        String target = tripdetail.target;
        int kms = tripdetail.kms;

        if(convertView == null)
        {
            LayoutInflater inflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = inflater.inflate(R.layout.listitem, null);

            TextView tripdate = (TextView) convertView.findViewById(R.id.date);
            TextView triptarget = (TextView) convertView.findViewById(R.id.target);
            TextView tripkms = (TextView) convertView.findViewById(R.id.kms);

            tripdate.setText(date);
            triptarget.setText(target);
            tripkms.setText(""+kms);
        }
        return convertView;
    }

    @Override
    public View getChildView(final int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {

        String childDetail = (String) getChild(groupPosition, childPosition);
        if(convertView == null)
        {
            LayoutInflater inflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = inflater.inflate(R.layout.list_child_item, null);
        }
        TextView listchild1 = (TextView) convertView.findViewById(R.id.list_details1);
        Button button =(Button) convertView.findViewById(R.id.btnhide);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                listView.collapseGroup(groupPosition);
            }
        });

        listchild1.setTypeface(null, Typeface.BOLD);
        listchild1.setText(childDetail);
        return convertView;
    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {
        return true;
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
TabHoster for replacing Fragment in FrameLayout
=======================================================================================================================================================================
Activity_main.xml
=================

<android.support.v4.app.FragmentTabHost
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@android:id/tabhost">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <FrameLayout
            android:layout_width="fill_parent"
            android:layout_height="0dp"
            android:layout_weight="1"
            android:background="@drawable/background"
            android:id="@android:id/tabcontent">
        </FrameLayout>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_gravity="center"
            android:layout_height="80dp">
        <TabWidget
            android:layout_width="fill_parent"
            android:layout_height="80dp"
            android:layout_marginBottom="0dp"
            android:layout_gravity="center|top"
            android:background="@color/tabwidget_color"
            android:id="@android:id/tabs"
            android:gravity="center">
        </TabWidget>
        </LinearLayout>
    </LinearLayout>
</android.support.v4.app.FragmentTabHost>


MainActivity.java
=================

package android.eventurers.com.speedtracker;

import android.content.res.Resources;
import android.support.v4.app.FragmentTabHost;
import android.support.v4.app.FragmentActivity;
import android.os.Bundle;
import android.widget.TabHost;
import android.widget.Toast;


public class StartActivity extends FragmentActivity {

    private FragmentTabHost tabHoster;
    private TabHost.TabSpec spec_location, spec_settings, spec_document, spec_message;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_start);
        init();
    }

    private void init()
    {
        tabHoster = (FragmentTabHost) findViewById(android.R.id.tabhost);
        tabHoster.setup(this, getSupportFragmentManager(), android.R.id.tabcontent);

        spec_location = tabHoster.newTabSpec("Tab1");
        spec_settings = tabHoster.newTabSpec("Tab2");
        spec_document = tabHoster.newTabSpec("Tab3");
        spec_message = tabHoster.newTabSpec("Tab4");

        spec_location.setIndicator("", getResources().getDrawable(R.drawable.tab1_selector));
        spec_settings.setIndicator("", getResources().getDrawable(R.drawable.setting_disabled));
        spec_document.setIndicator("", getResources().getDrawable(R.drawable.document_disabled));
        spec_message.setIndicator("", getResources().getDrawable(R.drawable.message_disabled));

        tabHoster.addTab(spec_location, ExpandListHolder.class, null);
        tabHoster.addTab(spec_settings, ExpandListHolder.class, null);
        tabHoster.addTab(spec_document, ExpandListHolder.class, null);
        tabHoster.addTab(spec_message, ExpandListHolder.class, null);

	tabHoster.getTabWidget().getChildTabViewAt(0).setBackground(null);
        tabHoster.getTabWidget().getChildTabViewAt(1).setBackground(null);
        tabHoster.getTabWidget().getChildTabViewAt(2).setBackground(null);
        tabHoster.getTabWidget().getChildTabViewAt(3).setBackground(null);
    }
}

tab1_selector.xml  (File to change the tab image when the particular tab is selected/ deselected)
=================

<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <item
        android:state_selected="true"
        android:drawable="@drawable/locate_enabled"></item>
    <item
        android:state_selected="false"
        android:drawable="@drawable/locate_disabled"></item>
</selector>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
TimePicker code on Button Click and setting the time on the Button itself
=================================================================================================================================================================

btntotime = (Button) view.findViewById(R.id.btntotime);

        btntotime.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Calendar mcurrentTime = Calendar.getInstance();
                int hour = mcurrentTime.get(Calendar.HOUR_OF_DAY);
                int minute = mcurrentTime.get(Calendar.MINUTE);
                TimePickerDialog mTimePicker;
		//mTimePicker = new TimePickerDialog(getActivity(), TimePickerDialog.THEME_HOLO_LIGHT, new TimePickerDialog.OnTimeSetListener() {  for Spinner mode in Lollipop version
                mTimePicker = new TimePickerDialog(getActivity(), new TimePickerDialog.OnTimeSetListener() {
                    @Override
                    public void onTimeSet(TimePicker timePicker, int selectedHour, int selectedMinute) {
                        String fhour = (selectedHour>9)? (""+selectedHour) : ("0"+selectedHour);
                        String fmin = (selectedMinute>9)? (""+selectedMinute) : ("0"+selectedMinute);
                        btnfromtime.setText( fhour + "H" + fmin);
                    }
                }, hour, minute, true);//true 24 hour time  //false 12 hour time
                mTimePicker.setTitle("Select Time");
                mTimePicker.show();
            }
        });

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Span Textview to change the color of the specified text / Underline the text
===================================================================================================================================================================
TextView TV = (TextView)findViewById(R.id.mytextview01);
Spannable wordtoSpan = new SpannableString("I know just how to whisper, And I know just how to cry,I know just where to find the answers");        
wordtoSpan.setSpan(new ForegroundColorSpan(Color.BLUE), 15, 30, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
TV.setText(wordtoSpan);



	SpannableString phone = new SpannableString("+612 9563 6000");
        phone.setSpan(new UnderlineSpan(), 0, phone.length(), 0);
        phone.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.bg_travel)), 0, phone.length(), 0);
        txtContactPhone.append(phone);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Single Choice Dialog Chooser and get Radio Selected item on Button Click Event [Alert Dialog]
=====================================================================================================================================================================


Single line code --->  new AlertDialog.Builder(this).setTitle("Argh").setMessage("Watch out!").setIcon(R.drawable.alertimg).setNeutralButton("Close", null).show();
		       new AlertDialog.Builder(this).setTitle("Argh").setMessage("Watch out!").setNegativeButton("Cancel", null).setPositiveButton("OK", null).setNeutralButton("No", null).show();


final String waitingtime[] = {"10 MIN", "20 MIN", "30 MIN", "40 MIN", "50 MIN", "60 MIN"};
            btnwaitingtime.setOnClickListener(new View.OnClickListener() 
	    {
                @Override
                public void onClick(View v) {
                    Toast.makeText(getActivity(), "waitTime", Toast.LENGTH_SHORT).show();
                    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                    builder.setTitle("Choose Waiting Time");
                    builder.setSingleChoiceItems(waitingtime, 0, null);

                    builder.setPositiveButton("Ok", new DialogInterface.OnClickListener()
                    {
                        public void onClick(DialogInterface dialog, int whichButton)
                        {
                            dialog.dismiss();
                            waiting_time = ((AlertDialog)dialog).getListView().getCheckedItemPosition();
                            btnwaitingtime.setText(waitingtime[waiting_time]);
                        }
                    });

                    builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int whichButton) {
                        }
                    });
		    builder.setCancelable(false);     
                    builder.show();
                }
            });


    setPositiveButton   -    Describes an intended action or a confirmation, e.g. "Save" or "Yes".
    setNeutralButton	-    Describes a "neutral" action such as "Close".
    setNegativeButton	-    Describes a cancellation or simply a "No".

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Start a new Service from an Intent (which runs in background even the invoked activity get destroyed)
=====================================================================================================================================================================

Intent intent = new Intent(MainActivity.this, ExampleService.class);
        startService(intent);


    public class LocationService extends Service 
    {
    WakeLock wakeLock;
    Boolean isGPSEnabled;

    double slatitude, elatitude, slongitude, elongitude;
    long startTime, endTime, diffTime;
    float speed, distance;
    float res[] = new float[1];
    Long longvalue = new Long(11);
    LocationManager locationManager;
    final String TAG= this.getClass().getSimpleName();

    public LocationService()
    {
    }

    @Override
    public IBinder onBind(Intent intent) {
       return null;
    }

    @Override
    public void onCreate()
    {
        PowerManager powerManager = (PowerManager)this.getSystemService(Context.POWER_SERVICE);
        wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, "Do not Sleep");
        Log.d(TAG , "Service Created");
        slatitude = slongitude = elatitude = elongitude = 0;
        startTime = endTime = diffTime = 0;
        distance = speed=0;
    }

    public int onStartCommand(Intent intent, int flag, int startId)
    {
        Log.d(TAG, "onStartCommand Method");
        super.onStartCommand(intent, flag, startId);
        locationManager = (LocationManager)this.getSystemService(Context.LOCATION_SERVICE);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10*1000, 0, listener);
    }

    private LocationListener listener = new LocationListener() {
        @Override
        public void onLocationChanged(Location location) {
            if(location == null)
                return ;

            if(isConnectedtoInternet(getApplicationContext()))
            {
                elatitude = location.getLatitude();
                elongitude = location.getLongitude();
                endTime = location.getTime();
            }
        }

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {

        }

        @Override
        public void onProviderEnabled(String provider) {

        }

        @Override
        public void onProviderDisabled(String provider) {

        }
    };

    public boolean isConnectedtoInternet(Context context)
    {
        ConnectivityManager connectivityManager = (ConnectivityManager)this.getSystemService(Context.CONNECTIVITY_SERVICE);

        if(connectivityManager!=null) {
            Network[] network = connectivityManager.getAllNetworks();
            if(network!=null)
                for(int i=0; i<network.length; i++)
                {
                    NetworkInfo info = connectivityManager.getNetworkInfo(network[i]);
                    if(info.getState() == NetworkInfo.State.CONNECTED)
                        return true;
                }
        }
        return false;
    }

    public void onDestroy()
    {
        super.onDestroy();
        wakeLock.release();
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
AutoComplete TextView using Filter class and Suggestion Adapter from the given URL using JSON
======================================================================================================================================================================

<AutoCompleteTextView
            android:layout_width="330dp"
            android:layout_height="wrap_content"
            android:id="@+id/txtlocation"
            android:completionHint="Select Location"
            android:text="">
            <requestFocus/>
        </AutoCompleteTextView>


AutoCompleteTextView textView = (AutoCompleteTextView)findViewById(R.id.txtlocation);
        textView.setAdapter(new SuggestionAdapter(this, textView.getText().toString()));


public class JsonParse{
    double current_latitude,current_longitude;
    DataModel dataModel;
    public JsonParse(){}
    public JsonParse(double current_latitude,double current_longitude){
        this.current_latitude=current_latitude;
        this.current_longitude=current_longitude;
    }
    public List<String> getParseJson(String sName)
    {
        List<String> ListData = new ArrayList<String>();
        try {
            String line="", jsonstr;
            dataModel = new DataModel();
            String temp=sName.replace(" ", "%20");
            URL js = new URL("http://autocomplete.wunderground.com/aq?query="+temp);
            URLConnection jc = js.openConnection();
            BufferedReader reader = new BufferedReader(new InputStreamReader(jc.getInputStream()));
            while((jsonstr=reader.readLine())!=null) {
                line = line + jsonstr;
            }
            JSONObject jsonResponse = new JSONObject(line);
            JSONArray jsonArray = jsonResponse.getJSONArray("RESULTS");
            for(int i = 0; i < jsonArray.length(); i++){
                JSONObject r = jsonArray.getJSONObject(i);
                ListData.add(r.getString("name"));
            }
            dataModel.setCname(ListData);
        } catch (Exception e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
        return ListData;
    }
}


public class SuggestionAdapter extends ArrayAdapter<String> {

    protected static final String TAG = "SuggestionAdapter";
    private List<String> suggestions;
    public SuggestionAdapter(Activity context, String nameFilter) {
        super(context, android.R.layout.simple_dropdown_item_1line);
        suggestions = new ArrayList<String>();
    }
    public int getCount()
    {
        return suggestions.size();
    }
    @Override
    public String getItem(int index) {
        return suggestions.get(index);
    }
    @Override
    public Filter getFilter() {
        Filter myFilter = new Filter() {
            @Override
            protected FilterResults performFiltering(CharSequence constraint) {
                FilterResults filterResults = new FilterResults();
                JsonParse jp=new JsonParse();
                if (constraint != null) {
                    List<String> new_suggestions =jp.getParseJson(constraint.toString());
                    suggestions.clear();
                    for (int i=0;i<new_suggestions.size();i++) 
		    {
                        suggestions.add(new_suggestions.get(i));
                    }
                    filterResults.values = suggestions;
                    filterResults.count = suggestions.size();
                }
                return filterResults;
            }

            @Override
            protected void publishResults(CharSequence contraint,FilterResults results) {
                if (results != null && results.count > 0) {
                    notifyDataSetChanged();
                } else {
                    notifyDataSetInvalidated();
                }
            }
        };
        return myFilter;
    }

}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Broadcast message using Broadcast Receiver & Passing data from Service class to Activity & Receive Broadcast info in all the registered activity
======================================================================================================================================================================
1) Service class (or) class where are starting to Broadcast
   ========================================================

		Intent intent = new Intent();
                intent.setAction("MyBroadcast");
                intent.putExtra("travelDistance", totalTravelDistance);
                sendBroadcast(intent);

2) BroadCast receiver class to handle the Broadcast message
   ==========================================================
public class SpeedBroadcastReceiver extends BroadcastReceiver
{
    public SpeedBroadcastReceiver()
    {
    }

    @Override
    public void onReceive(Context context, Intent intent)
    {
        Bundle extras = intent.getExtras();
        if(extras != null)
            if(extras.containsKey("travelDistance"))
               String travelDistance = extras.get("travelDistance").toString();
    }
}

3) Activity class to handle the Broadcast message (onResume & onPause Methods is must)
   ==============================================
	BroadCastReceiver receiver = new BroadcastReceiver() {					//To be in onCreate Method
            @Override	
            public void onReceive(Context context, Intent intent) {
                Bundle extras = intent.getExtras();
                if(extras != null)
                    if(extras.containsKey("travelDistance"))
                        totalDistance =  Float.parseFloat(extras.get("travelDistance").toString());
                    if(totalDistance>0)
                        txt_distance.setText("Distance is :"+totalDistance);
            }
        }; 

    @Override
    protected void onResume() {
        IntentFilter filter = new IntentFilter();
        filter.addAction("MyBroadcast");
        registerReceiver(receiver, filter);
        super.onResume();
    }

    @Override
    protected void onPause() {
        unregisterReceiver(receiver);
        super.onPause();
    }
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Write a File in External SDcard
======================================================================================================================================================================
	try
        {
	    //File externalStorageDir = Environment.getExternalStorageDirectory();
	    //File myFile = new File(externalStorageDir , "mysdfile.txt");

		
            File myFile = new File("/sdcard/mysdfile.txt");
            if(!myFile.exists())
                myFile.createNewFile();
            FileOutputStream fOut = new FileOutputStream(myFile);
            OutputStreamWriter myOutWriter = new OutputStreamWriter(fOut);
            myOutWriter.append(data+"/n");
            myOutWriter.close();
            fOut.close();
        }
        catch (Exception e)
        {
            Toast.makeText(getBaseContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
        }



    	    File environmentFile  = Environment.getExternalStorageDirectory();
            File myFile = new File(environmentFile, "SpeedTracker.txt");
            if(!myFile.exists())
                myFile.createNewFile();

            long fileLength = myFile.length();
            RandomAccessFile raf = new RandomAccessFile(myFile, "rw");
            raf.seek(fileLength);
            raf.writeBytes(data);
            raf.close();
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Apply Styling for an Item using Gradient and angle or degree
=====================================================================================================================================================================
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
      android:startColor="@color/gradient_start"
      android:endColor="@color/gradient_end"
      android:angle="-270" /> 
</shape>

//Set as background for the view

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Splash Screen for the App opening page
=====================================================================================================================================================================
protected void onCreate(Bundle savedInstanceState) 
{
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);

        new Handler().postDelayed(new Runnable() {
            
            public void run() {
                Intent intent;
                intent = new Intent(SplashActivity.this, HomeActivity.class);
                if (getFeezApp().getUserPrefs().isLoggedIn()) {
                    intent = new Intent(SplashActivity.this, HomeActivity.class);
                } else {
                    intent = new Intent(SplashActivity.this, RegisterActivity.class);
                }
                startActivity(intent);
                finish();
            }
        }, 3000);
    }

activity_splash.xml
===================

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:background="@drawable/ic_splash_screen"
    android:layout_height="match_parent">

</RelativeLayout>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
ProgressDialog code to create, show it and dismiss it
======================================================================================================================================================================

	final ProgressDialog mprogressDialog = new ProgressDialog(getActivity());
        mprogressDialog.show();
        mprogressDialog.setContentView(R.layout.custom_progress_layout);
        mprogressDialog.setCancelable(false);

custom_progress_layout
======================

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ProgressBar
        style="?android:attr/progressBarStyleLarge"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/progressBar"
        android:indeterminate="false"
        android:layout_centerVertical="true"
        android:layout_centerHorizontal="true" />
</RelativeLayout>

To Dismiss it
=============
		if(mprogressDialog.isShowing())
                mprogressDialog.dismiss();
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Creating a StringEntity for HttpEntity using JSON Object
======================================================================================================================================================================
	JSONObject jsonObject = new JSONObject();
        StringEntity stringEntity=null;
        try {
            jsonObject.put("ExportType", exportType);
            jsonObject.put("ExportEmail", exportEmail);
            jsonObject.put("HeureDepart", (cbkDepartment.isChecked() ? "1" : "0"));
            jsonObject.put("AddressComplete", (cbkAddress.isChecked() ? "1" : "0"));
        } catch (Exception e) {
            FZLog.print(e.getMessage());
        }
        try {
            stringEntity = new StringEntity(jsonObject.toString());
        }
        catch (Exception e)
        {
            FZLog.print(e.getMessage());
        }
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Return data form AsyncTask to Activity using onPostExecute()
======================================================================================================================================================================

Step 1: Create Interface
=======
public interface AsyncResponse {
    void processFinish(String output);
}

Step 2: in your Async class, you need to declare it (interface : AsyncResponse):
=======
public class MyAsyncTask extends AsyncTask{
public AsyncResponse delegate=null;

   @Override
   protected void onPostExecute(String result) {
      delegate.processFinish(result);
   }

Step 3: in your main Activity you need to implements interface you created earlier AsyncResponse.
=======
public class MainActivity implements AsyncResponse{
   MyAsyncTask asyncTask =new MyAsyncTask();
    @Override
    public void onCreate(Bundle savedInstanceState) {
     asyncTask.delegate = this;
    }


   void processFinish(String output){
     //this you will received result fired from async class of onPostExecute(result) method.
   }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Method to Check whether Active Network Connections are Available using ConnectivityManager
======================================================================================================================================================================
public boolean isConnectedtoInternet(Context context)
    {
        ConnectivityManager connectivityManager = (ConnectivityManager)this.getSystemService(Context.CONNECTIVITY_SERVICE);

        if(connectivityManager!=null) {
            NetworkInfo network = connectivityManager.getActiveNetworkInfo();
            if(network != null && network.isConnected())
                return true;
        }
        return false;
    }
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
In-app Purchases (Billing Overview)
======================================================================================================================================================================
In-app Billing Service is a Google play Service to sell digital Content from your application, you can sell product as

    Standard in-app products (one-time billing), or
    Subscriptions (recurring, automated billing)

-> All the Transactions are processed by google play not by your App at any point of time.
-> Google Play uses the same checkout backend service 
-> To Sell app, you need Google Developer Console Account and Google Wallet Merchant Account

OverView
========
-->	Get info about each country law and rules
-->	App won't directly communicate with Google play server, the app communicates with Google play Service installed in device using IPC.
-->	The App doesn't maintain any network connection between App and Google play Server, Everything is maintained by Google play Service
--> 	The user cannot own multiple copies of an in-app item; only one copy can be owned at any point in time.
-->	You can sale only digital goods from your app
-->	You cannot use In-app Billing to sell physical goods, 
-->	Because, once the user has purchased an in-app product there is no refund window
-->	You are responsible for delivering the digital content, Google Play doesn't provide any content to deliver
-->	Developer Console is where you can publish your In-app Billing application
--> 	You can create a product list of digital goods that are associated with your application, including items for one-time purchase and recurring subscriptions
--> 	For each item, you can define information such as the item’s unique product ID (also called its SKU), product type, pricing, description, and how Google Play should handle and track purchases for that product.
--> 	You must have a Google payments merchant account to use the In-app Billing service on Google Play.
--> 	When the checkout process is complete, Google Play sends your application the purchase details, such as the order number, the order date and time, and the price paid

OverView of Implementation Steps
================================
---> Include the billing Version API-3 to your Android project
---> set the permissions for your application to communicate with Google Play
---> establish a connection between your application and Google Play.
---> In Developer Console, When you create a new application entry in the Developer Console, it automatically generates a public license key for your application. 
     You will need this key to establish a trusted connection from your application to the Google Play servers.
---> One key per application, don’t need to repeat these steps when you update the APK file for your application.
---> To Sell app, you also need to have a Google payments merchant account.

API Version-3 Implementation Steps
==============================
---> Add the In-app Billing library to your project.

---> Copy the IInAppBillingService.aidl file and paste into the below mentioned folder
	Create a package named "com.android.vending.billing" under src folder

---> Add the line in AndroidManifest.xml file to communicate with Google play billing Service
	<uses-permission android:name="com.android.vending.BILLING" />

--->  To facilitate messaging between your application and Google Play, 
	implement a ServiceConnection to bind your activity to IInAppBillingService. 
	Override the onServiceDisconnected and onServiceConnected methods to get a reference to the IInAppBillingService instance

	steps:
	------
	Bind to IInAppBillingService.
    	Send billing requests (as IPC method calls) to the Google Play application.
    	Handle the synchronous response messages that are returned with each billing request.

	code:
	-----
	IInAppBillingService mService;						==1==

	ServiceConnection mServiceConn = new ServiceConnection() {
   	@Override
   	public void onServiceDisconnected(ComponentName name) {
       		mService = null;
   	}

   	@Override
   	public void onServiceConnected(ComponentName name, IBinder service) {
       		mService = IInAppBillingService.Stub.asInterface(service);
   	  }
	};

---> From activity onCreate(), call bindService()
	In bindService() pass 
		1) Intent that references the In-app Billing service
		2) instance of the ServiceConnection that you created  (mServiceConn)
	Explicitly set the Intent's target package name to com.android.vending — the package name of Google Play app
	(Ensures that only the Google Play app can handle billing requests from your app)

	code:
	-----
	public void onCreate(Bundle savedInstanceState) {
  	super.onCreate(savedInstanceState);
  	setContentView(R.layout.activity_main);
  	Intent serviceIntent = new Intent("com.android.vending.billing.InAppBillingService.BIND");
  	serviceIntent.setPackage("com.android.vending");
  	bindService(serviceIntent, mServiceConn, Context.BIND_AUTO_CREATE); 

	
	use mService to communicate with Google play Service			as declared in above ==1==

--->	UnBind the In-app Billing Service when done with Activity

	code:
	-----
	public void onDestroy() {
    		super.onDestroy();
    		if (mService != null) 
		{
        	  unbindService(mServiceConn);
    		}
	}
---> Now App is connected to Google Play
	Google Play provides a checkout interface for users to enter their payment method. When an item is purchased, Google Play recognizes that the 
	user has ownership of that item and prevents the user from purchasing another item with the same product ID until it is consumed. 

Querying for Items Available for Purchase
=========================================
---> To pass a request to the In-app Billing service, first create a Bundle that contains a String ArrayList of product IDs with key "ITEM_ID_LIST", 
	where each string is a product ID for an purchasable item.

	code:
	------
	ArrayList<String> skuList = new ArrayList<String> ();
	skuList.add("premiumUpgrade");
	skuList.add("gas");
	Bundle querySkus = new Bundle();
	querySkus.putStringArrayList(“ITEM_ID_LIST”, skuList);

---> To retrieve information from Google play,  call the getSkuDetails() on the In-app Billing Version 3 API, 			//so 4 arguments to be passed
	and pass the method the In-app Billing API version (3)
	the package name of your calling app, 
	the purchase type (“inapp”), 				//inapp (or) Subscription	
	and the Bundle that you created.

	code:
	-----
	Bundle skuDetails = mService.getSkuDetails(3, getPackageName(), "inapp", querySkus);			//Call this method in Child Thread, don't use main Thread

---> If the request is successful, the returned Bundle has a response code of BILLING_RESPONSE_RESULT_OK (0).

---> The query results are stored in a String ArrayList with key DETAILS_LIST. 
	The purchase information is stored in the String in JSON format.

	code:
	------
	int response = skuDetails.getInt("RESPONSE_CODE");
	if (response == 0) {
	   ArrayList<String> responseList = skuDetails.getStringArrayList("DETAILS_LIST");
	
	   for (String thisResponse : responseList) {
	      JSONObject object = new JSONObject(thisResponse);
	      String sku = object.getString("productId");
	      String price = object.getString("price");
	      if (sku.equals("premiumUpgrade")) mPremiumUpgradePrice = price;
	      else if (sku.equals("gas")) mGasPrice = price;
	   }
	}

---> To make purchase request from the App, call getBuyIntent() with
	 In-app Billing API version (3)
	 the package name of your calling app
	 product ID for the item to purchase
	 the purchase type (“inapp” or "subs")
	 developerPayload String (public key generated from developer console)


	code:
	-----
	 Bundle buyIntentBundle = mService.getBuyIntent(3, getPackageName(), sku, "inapp", "bGoa+V7g/yqDXvKRqq+JTFn4uQZbPiQJo4pf9RzJ");

---> If request is successfull, Bundle has a response code of BILLING_RESPONSE_RESULT_OK  (0) and a 
	PendingIntent that you can use to start the purchase flow
	Next, extract a PendingIntent from the response Bundle with key BUY_INTENT. 
	
---> To complete the purchase transaction, call the startIntentSenderForResult method and use the PendingIntent
		
	code:
	-----
	PendingIntent pendingIntent = buyIntentBundle.getParcelable("BUY_INTENT");
	startIntentSenderForResult(pendingIntent.getIntentSender(), 1001, new Intent(), Integer.valueOf(0), Integer.valueOf(0), Integer.valueOf(0));

---> The purchase data for the order is a String in JSON format that is mapped to the INAPP_PURCHASE_DATA key in the response Intent

	code:
	-----
	'{
   	   "orderId":"GPA.1234-5678-9012-34567",
	   "packageName":"com.example.app",
	   "productId":"exampleSku",
	   "purchaseTime":1345678900000,
	   "purchaseState":0,
	   "developerPayload":"bGoa+V7g/yqDXvKRqq+JTFn4uQZbPiQJo4pf9RzJ",
	   "purchaseToken":"opaque-token-up-to-1000-characters"		
	 }'

---> Google Play generates a token for the purchase. This token is an opaque character sequence that may be up to 1,000 characters long.



General Implementation Steps
============================

---> In Google Developer Console, All Applications tab, add a new application entry.
   	 Click Add new application.
    	 Enter a name for your new In-app Billing application.
    	 Click Prepare Store Listing.

---> In the Services & APIs tab, find and make a note of the public license key that Google Play generated for your application. 
	 This is a Base64 string that you will need to include in your application code later.

---> you must add the IInAppBillingService.aidl file to your Android project, which defines the interface to the Google Play service
	The IInAppBillingService.aidl file will be installed to <sdk Installed Path>/extras/google/play_billing/.
---> Copy the IInAppBillingService.aidl file and paste into the below mentioned folder

---> Create a package named "com.android.vending.billing" under src folder
	
---> Open the AndroidManifest.xml file and update the package attribute value to use the package name for your project

---> Remember to copy the Base64 public license key for your application from the Developer Console over to your MainActivity.java

---> Add the line in AndroidManifest.xml file to communicate with Google play billing Service
	<uses-permission android:name="com.android.vending.BILLING" />

---> To set up synchronous communication with Google Play, create an IabHelper instance in your activity's onCreate method. In the constructor, 
	pass in the Context for the activity, along with a string containing the public license key that was generated earlier by the Google Play Developer Console. 
---> Create connection with Google play
	create an IabHelper instance in your activity's onCreate method. 
	In the constructor, pass the Context of activity, along with a string containing the public license key that was generated by the Google Play Developer Console.

	IabHelper mHelper;

	@Override
	public void onCreate(Bundle savedInstanceState) {
 	  // ...
 	  String base64EncodedPublicKey;
	
 	  // compute your public key and store it in base64EncodedPublicKey
 	 mHelper = new IabHelper(this, base64EncodedPublicKey);
	}

---> Next, perform the service binding by calling the startSetup method on the IabHelper instance that you created. 
	Pass the method an OnIabSetupFinishedListener instance, which is called once the IabHelper completes the asynchronous setup operation

   mHelper.startSetup(new IabHelper.OnIabSetupFinishedListener() {
   public void onIabSetupFinished(IabResult result) {
      if (!result.isSuccess()) {		// there is a problem.        
	         Log.d(TAG, "Problem setting up In-app Billing: " + result);
      }  // IAB is fully set up!
   }
  });

---> Remember to unbind from the In-app Billing service when you are done with your activity. 
	If you don’t unbind, the open service connection could cause your device’s performance to degrade. 
	To unbind and free your system resources, call the IabHelper's dispose method when your Activity is destroyed.

   public void onDestroy() 
   {
   super.onDestroy();
   if (mHelper != null) mHelper.dispose();
   mHelper = null;
   }

http://developer.android.com/training/in-app-billing/preparing-iab-app.html

http://developer.android.com/google/play/billing/billing_integrate.html
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Push Notification to open an Intent while another app is in the Foreground
======================================================================================================================================================================
NotificationCompat.Builder    		contains the UI specification and action information
NotificationCompat.Builder.build()	used to create notification (Which returns Notification object)
NotificationManager.notify() 		to issue the notification.

steps :
 
 1) Create NotificationCompat.Builder object with all UI specification
 2) set the Intent to be invoked using setContentIntent()
 3) invoke the notification using manager.notify(Notification Object);

private void init()
    {
        button = (Button) findViewById(R.id.btnEnter);

        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, MessageActivity.class);

                NotificationManager manager = (NotificationManager)MainActivity.this.getSystemService(Context.NOTIFICATION_SERVICE);
                PendingIntent pendingIntent =  PendingIntent.getActivity(getApplicationContext(), 0, intent, 0);

                Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.btimg);
                NotificationCompat.Builder mbuilder = new NotificationCompat.Builder(MainActivity.this)
                .setLargeIcon(bitmap)                       //Image shown when you Expand the notification
                .setSmallIcon(R.drawable.audio_file_icon)   //Image shown when you get the notification
                .setContentTitle("New Notification")        //Title for the notification
                .setStyle(new NotificationCompat.BigTextStyle().bigText("You have Won One Lakh rupees"));

                mbuilder.setContentIntent(pendingIntent);
                manager.notify(0, mbuilder.build());
            }
        });
    }

Another way of creating NotificationDialog
==========================================

 final int NOTIF_ID = 1234;
 
 NotificationManager notifManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
 Notification note = new Notification(R.drawable.icon, "New E-mail", System.currentTimeMillis());
 
 PendingIntent intent = PendingIntent.getActivity(this, 0, new Intent(this, Main.class), 0);
 
 note.setLatestEventInfo(this, "New E-mail", "You have one unread message.", intent);
 
 notifManager.notify(NOTIF_ID, note);
 // notifManager.cancel(NOTIF_ID);
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Date Formatting from String and String to Date
=======================================================================================================================================================================

From String to Date
-------------------

String dtStart = "2010-10-15T09:27:37Z";  
SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");  
try {  
    Date date = format.parse(dtStart);  
    System.out.println(date);  
} catch (ParseException e) {  
    // TODO Auto-generated catch block  
    e.printStackTrace();  
}

From Date to String
-------------------

SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");  
try {  
    Date date = new Date();  
    String datetime = dateFormat.format(date);
    System.out.println("Current Date Time : " + datetime); 
} catch (ParseException e) {  
    // TODO Auto-generated catch block  
    e.printStackTrace();  
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Converting Pixel to dp & dp to Pixel
=======================================================================================================================================================================

 public int dpToPx(int dp) {
        DisplayMetrics displayMetrics = MainActivity.this.getResources().getDisplayMetrics();
        int px = Math.round(dp * (displayMetrics.xdpi / DisplayMetrics.DENSITY_DEFAULT));
        return px;
    }

    public int pxToDp(int px) {
        DisplayMetrics displayMetrics = MainActivity.this.getResources().getDisplayMetrics();
        int dp = Math.round(px / (displayMetrics.xdpi / DisplayMetrics.DENSITY_DEFAULT));
        return dp;
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code to get Display height and width of the device
=======================================================================================================================================================================
	DisplayMetrics displayMetrics = MainActivity.this.getResources().getDisplayMetrics();
        width = displayMetrics.widthPixels;
        height = displayMetrics.heightPixels;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Compare 2 Dates using getTime()
=======================================================================================================================================================================
 private boolean compareDate(Date curDate, Date selectedDate)
    {
        if(curDate.getTime() > selectedDate.getTime())
            return true;
        return false;
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Handler object to Handle Runnable for Every Second [(See Below example)]
=======================================================================================================================================================================
  Handler mhandler;

    private void init()
    {
        mhandler = new Handler();
    }

    Runnable onEverySecond = new Runnable() 
    {       
        public void run() 
        {
            if(CustomHorizontalScrollView.isScrollable && (CustomHorizontalScrollView.scrolledX!=prevScrollX)) 
            {
                imageView.setVisibility(View.INVISIBLE);
                prevScrollX = CustomHorizontalScrollView.scrolledX;
                mhandler.postDelayed(onEverySecond, 50);
            }
            else
            {
                imageView.setVisibility(View.VISIBLE);
                onScrollDays(CustomHorizontalScrollView.isScrollRight, CustomHorizontalScrollView.scrolledX);
            }
        }
    };

    private void setDefaults()
    {
	mhandler.postDelayed(onEverySecond, 50);
    }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Horizontal ScrollView for moving the scroll to the End by default and starting after a while of time
Animation in horizontal Scroll view for moving the position to start
=======================================================================================================================================================================
	
	horizontalScrollView.post(new Runnable() {
            public void run() {
                horizontalScrollView.fullScroll(HorizontalScrollView.FOCUS_RIGHT);
            }
        });


        horizontalScrollView.postDelayed(new Runnable() {
            public void run() {
                ObjectAnimator animator=ObjectAnimator.ofInt(horizontalScrollView, "scrollX",0);
                animator.setDuration(1000);
                animator.start();
            }
        }, 100L);
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Custom View Class for HorizontalScrollView and using Static variable access the values from the CustomView Class  [(See above example)]
=======================================================================================================================================================================
public class CustomHorizontalScrollView extends HorizontalScrollView
{
    Context context;
    public static int scrolledX;
    public static boolean isScrollable, isScrollRight;
    public CustomHorizontalScrollView(Context context)
    {
        super(context);
    }
    public CustomHorizontalScrollView(Context context, AttributeSet attrs)
    {
        super(context, attrs);
        this.context = context;
        this.setSmoothScrollingEnabled(true);
    }

    @Override
    protected void onScrollChanged(int scrollX, int scrollY, int oldScrollX, int oldScrollY)
    {
        isScrollable = true;
        if(scrollX>oldScrollX) {
            if ((scrollX - oldScrollX) <= 1) {
                isScrollRight=true;
                isScrollable = false;
            }
        }
        else
        {
            if((oldScrollX - scrollX)<=1) {
                isScrollRight = false;
                isScrollable = false;
            }
        }
        scrolledX = scrollX;
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Getting the Current Pixel Color using onTouch Event Listener
=======================================================================================================================================================================

 public boolean onTouch(View v, MotionEvent event)
    {
      Bitmap bitmap = ((BitmapDrawable)view.getDrawable()).getBitmap();
      int currpixColor = bitmap.getPixel((int)event.getX(), (int)event.getY());
      if((Color.red(currPixColor)<=190 && Color.red(currPixColor)>=180) && (Color.green(currPixColor)<=230 && Color.green(currPixColor)>=215) &&
                (Color.blue(currPixColor)<=240 && Color.blue(currPixColor)>=230))
        return true;
      return false;
   }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
ViewPager / view pager
=======================================================================================================================================================================
ViewPager --> allows the user to flip left and right through pages of data. You supply an implementation of a PagerAdapter to generate the pages that the view shows. 
PagerAdaper --> Base class providing the adapter to populate pages inside of a ViewPager

When you implement a PagerAdapter, you must override the following methods at minimum:
  1)  instantiateItem(ViewGroup, int)
  2)  destroyItem(ViewGroup, int, Object)
  3)  getCount()
  4)  isViewFromObject(View, Object)

Steps:
	--Create a FrameLayout in activity_main.xml

	<FrameLayout
        android:id="@+id/fragment_slider"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        </FrameLayout>

	--MainActivity.xml

	 setContentView(R.layout.activity_main);

        if(savedInstanceState == null)
        {
            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
            SlidingTabFragment fragment = new SlidingTabFragment();
            transaction.replace(R.id.fragment_slider, fragment);
            transaction.commit();
        }


	--sliding_tab_fragment.xml

	<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    	xmlns:tools="http://schemas.android.com/tools"
	    android:layout_width="match_parent"
	    android:layout_height="match_parent"
	    android:orientation="vertical"
	    tools:context="com.eventurers.android.slidingview.SlidingTabFragment">
	
	   <com.eventurers.android.slidingview.view.SlidingTabLayout
	       android:id="@+id/slidingTabLayout"
	       android:layout_width="match_parent"
	       android:layout_height="wrap_content"/>
		
	   <android.support.v4.view.ViewPager
	       android:id="@+id/viewpager"
	       android:layout_width="match_parent"
	       android:layout_height="0dp"
	       android:layout_weight="1"
	       android:background="@android:color/holo_blue_bright"/>
	</LinearLayout>

	--SlidingTabFragment.java

	public void onViewCreated(View view, @Nullable Bundle savedInstanceState)
        {
        super.onViewCreated(view, savedInstanceState);

        viewPager = (ViewPager)view.findViewById(R.id.viewpager);
        viewPager.setAdapter(new SamplePagerAdapter());

        slidingTabLayout = (SlidingTabLayout) view.findViewById(R.id.slidingTabLayout);
        slidingTabLayout.setViewPager(viewPager);
       }

    public class SamplePagerAdapter extends PagerAdapter
    {
        public SamplePagerAdapter()
        {
            super();
        }
        @Override
        public int getCount() {
            return 10;
        }

        @Override
        public Object instantiateItem(ViewGroup container, int position)
        {
            View view = getActivity().getLayoutInflater().inflate(R.layout.pager_item, container, false);
            container.addView(view);

            TextView pageText = (TextView) view.findViewById(R.id.item_title);
            pageText.setText(String.valueOf(position + 1)+" Page With Values ");

            return view;
        }

        @Override
        public void destroyItem(ViewGroup container, int position, Object object)
        {
            container.removeView((View)object);
        }

        @Override
        public boolean isViewFromObject(View view, Object o)
        {
            return o == view;
        }

        @Override
        public CharSequence getPageTitle(int position)
        {
            return "Item " + (position + 1);
        }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Generating Random Number between 1 and 30 and setting the values in TextView
=======================================================================================================================================================================

	Random r = new Random();
        txtdates.setText(Integer.toString(r.nextInt(29)+1));
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
For using AsyncHttpClient in project 
=======================================================================================================================================================================
    
  Include this 2 library files in the gradle

    compile 'com.loopj.android:android-async-http:1.4.8'
    compile files('libs/httpcore-4.2.3.jar')
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Web Service using AsyncHttpClient and JsonHttpResponseHandler
=======================================================================================================================================================================
Include the above mentioned library in gradle file


	private AsyncHttpClient client;
	client = new AsyncHttpClient();
        int SOCKET_TIMEOUT = 60 * 1000;
        client.setTimeout(SOCKET_TIMEOUT);
							//Block of Code in OnClick

	JSONObject data = new JSONObject();
        StringEntity stringEntity = null;

        email = edtEmail.getText().toString();
        password = edtPassword.getText().toString();
        if(ValidateData(email, password))
        {
            Header[] header = {
                    new BasicHeader("Content-type", "application/json"),
                    new BasicHeader("deviceType", "Android")
                    };
            try {
                data.put("email", email);
                data.put("password", password);
                Log.d(TAG+" JSon Data ", data.toString());				//JSon Data? {"email":"davmooray@gmail.com","password":"eventurers"}
                stringEntity = new StringEntity(data.toString(), "UTF-8");
                }
                catch(Exception e)
                {
                	Log.d(TAG, "Exception"+e.getMessage());
                }
                client.post(LoginActivity.this, WebServices.LOGIN, header, stringEntity, "application/json", new JsonHttpResponseHandler()
                {
                @Override
                public void onSuccess(int statusCode, Header[] headers, JSONObject response)
                {
                    Log.d(TAG, "Success StatusCode :"+statusCode);
                    Log.d(TAG, "Success Response :"+response);
                    Intent intent = new Intent(LoginActivity.this, LaneActivity.class);
                    startActivity(intent);
                }
                @Override
                public void onFailure(int statusCode, Header[] headers, Throwable throwable, JSONObject errorResponse)
                {
                    Log.d(TAG, "Failure StatusCode :"+statusCode);
                    Log.d(TAG, "Failure Json Response :"+ errorResponse);
                }
            });
        }

	Note : Here we are using JsonHttpResponseHandler instead of AsyncHttpResponseHandler, because we are getting as Json Response from the server
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
passing Objects from one activity to another activity
=======================================================================================================================================================================

MainActivity.java
=================

	ModelClass modelclassobj = new ModelClass();		// The complete object which holds all the values
 	Gson gson = new Gson();
        String targetStr = gson.toJson(modelObj);

        Intent intent = new Intent(MainActivity.this, LaneActivity.class);
        intent.putExtra("ModelObj", targetStr);
        startActivity(intent);

LaneActivity.java
=================
	Gson gson = new Gson();
        String target = getIntent().getStringExtra("ModelObj");
        modelclassobj = gson.fromJson(target, ModelClass.class);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
passing String ArrayList from one activity to another activity
=======================================================================================================================================================================
	 Intent intent = new Intent(ExtractTooteesListActivity.this, ListingTooteesActivity.class);
         intent.putStringArrayListExtra("targetObjects", tooTeesList.toString());
         startActivity(intent);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
List of Library to be included in gradle 
=======================================================================================================================================================================
GSON		-- compile 'com.google.code.gson:gson:2.4'

TextInputLayout for making a float Text
		-- compile 'com.android.support:design:23.0.0'
		-- compile 'com.android.support:design:22.2.0'
    		-- compile 'com.android.support:appcompat-v7:22.2.0'

Async HttpClient Request and Response
    		-- compile 'com.loopj.android:android-async-http:1.4.8'

HttpCore	-- compile files('libs/httpcore-4.2.3.jar')

ActiveAndroidLibrary --  https://github.com/pardom/ActiveAndroid/downloads/activeandroid-3.0.jar (Download jar)
			 Add to lib folder in the project --> Right click on the jar, and select "Add as a Library…"
			 For more Infor --> http://www.activeandroid.com/

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
TextInputLayout for floating Text and using the hint in EditText
=======================================================================================================================================================================

<android.support.design.widget.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/txtinlayout_email"
        android:textColorHint="@color/actionbar_bg"
        app:hintTextAppearance="@android:style/TextAppearance.Small">
        <EditText
            android:id="@+id/edt_email"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColorHint="@color/grey"
            android:singleLine="true"
            android:hint="Email"
            android:ems="30"/>
    </android.support.design.widget.TextInputLayout>

    <TextView
        android:id="@+id/txt_email_validate"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textColor="@color/red"
        android:textSize="12sp"/>

    <android.support.design.widget.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColorHint="@color/actionbar_bg"
        app:hintTextAppearance="@android:style/TextAppearance.Small">
        <EditText
            android:id="@+id/edt_password"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:password="true"
            android:hint="Password"
            android:ems="30"/>
    </android.support.design.widget.TextInputLayout>


In java Code :
--------------
	TextInputLayout mEmail = (TextInputLayout) findViewById(R.id.email);
	
	if (TextUtils.isEmpty(mEmail.getEditText())) {
            mEmail.setError(getString(R.string.email_must_not_be_empty));		//Setting Error for the TextInputLayout
            return;
        }
		
	mEmail.setError(null);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Active Android Configuration Steps
=======================================================================================================================================================================
1.	Download the jar file mentioned above
2.	Add to lib folder in the project
3.	Right click on the jar, and select "Add as a Library…"
4.	Add the DB_Name and DB_Version in the Android-Manifest file

	<application android:name="com.activeandroid.app.Application" ...>
		<meta-data android:name="AA_DB_NAME" android:value="Pickrand.db" />
        	<meta-data android:name="AA_DB_VERSION" android:value="5" />
	</application>
5.	Note that the application name points to the ActiveAndroid application class
6.	In our example we have two tables: Category and Item. So create 2 classes for those tables.

	Rules for creating model class
	------------------------------
	1) Your class must extend the Model class
	2) Your members must be annotated using @Column
	Note : Android creates an id field for your tables. This field is an auto-incrementing primary key

7.	@Table(name = "Categories")
	public class Category extends Model 
	{ 
   	 @Column(name = "Name")
    	 public String name;
	}

	@Table(name = "Items")
	public class Item extends Model 
	{
    	 @Column(name = "Name")
    	 public String name;

    	 @Column(name = "Category")
    	 public Category category;
	}	

8.	Relationship : Category has many Items, All items belongs to One category is represeted below
	

	@Table(name = "Categories")
	public class Category extends Model 
	{
	    @Column(name = "Name")
	    public String name;

	    // Category has many items, This method is optional, does not affect the foreign key creation.
	    public List<Item> items() 
	    {
	        return getMany(Item.class, "Category");
	    }
	}

	@Table(name = "Items")
	public class Item extends Model
	{

    	 @Column(name = "Name")
    	 public String name;

	 //Each item has one category
    	 @Column(name = "Category")
    	 public Category category;
	}
	
9. 	You can also set Indexes on specified columns by setting index = true in the column annotation
	 @Column(name = "Name", index = true)

10.	Specify your Model classes explicitely in your AndroidManifest for fast processing (Optional Step)
	<meta-data
    	android:name="AA_MODELS"
    	android:value="com.myapp.model.Item, com.myapp.model.Category" />

11.	Inserting and updating the records
	create a new instance of an activeandroid.Model class, assign values to its fields, and call the .save() method. 
	
	Category restaurants = new Category();
	restaurants.name = "Restaurants";
	restaurants.save();

	item = new Item();
	item.category = restaurants;
	item.name = "Red Robin";
	item.save();
	
	item = new Item();
	item.category = restaurants;
	item.name = "Olive Garden";
	item.save();

	Bulk Insertion by using Transaction
	-----------------------------------

	ActiveAndroid.beginTransaction();
	try 
        {
	    for (int i = 0; i < 100; i++)
	    {
            Item item = new Item();
            item.name = "Example " + i;
            item.save();
            }
            ActiveAndroid.setTransactionSuccessful();
	}
	finally 
	{
            ActiveAndroid.endTransaction();
	}
	
12.	Deleting the record in 3 ways
	
	Item item = Item.load(Item.class, 1);
	item.delete();

	Item.delete(Item.class, 1);

	new Delete().from(Item.class).where("Id = ?", 1).execute();

13.	Querying the database for selecting the single item from the table

	public static Item getRandom() 
	{
    	 return new Select().from(Item.class).orderBy("RANDOM()").executeSingle();
	}

	Querying the database for selecting all items from the table

	public static List<Item> getAll(Category category) 
	{
    	 return new Select()
         .from(Item.class)
         .where("Category = ?", category.getId())
         .orderBy("Name ASC")
         .execute();
	}

14.	ActiveAndroid handles many types by default. For handling a custom data type, you easily do so using TypeSerializer.

15.	Schema Migrations : 
	Whenever your schema changes you need to increment the database version number, either through Configuration or AA_DB_VERSION meta-data. 
	If new classes are added, ActiveAndroid will automatically add them to the database.
	If you want to change something in an existing table however (e.g. add or delete a column), this is done using sql-scripts named <NewVersion>.sql, 
	where NewVersion is the AA_DB_VERSION, in assets/migrations.
	ActiveAndroid will execute a script if its filename is greater than the old database-version and smaller or equal to the new version.

	Example : Let’s assume you added a column color to the Items table. You now need to increase AA_DB_VERSION to 2 and provide a script 2.sql.
	          ALTER TABLE Items ADD COLUMN color INTEGER;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Converting double value to Integer value
====================================================================================================================================================================
	double kms = Double.parseDouble(tripDetail.Kms);
        int kmsInt = (int)Math.round(kms);
        if((kms%kmsInt)>0)
            groupHolder.tripKMS.setText("" + kms);
        else
            groupHolder.tripKMS.setText("" + kmsInt);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Calling the Method in Fragment from the Adapter class using Interface / Listener classes(e.g: from FeedListAdapter.java to FeedsFragment.java)
====================================================================================================================================================================
Contains 3 step process, 

1) Create an interface/Listener class with the method and parameters

	public interface TravelListItemListener
	{
    		public void deleteTravelListItem(String id);			//method to be called in Fragment class
	}
   

2) In Adapter class
	protected TravelListItemListener travelListItemListener;			//Instance of Listener class
	
	public void setTravelListListener(TravelListItemListener travelListItemListener)
    	{
        	this.travelListItemListener = travelListItemListener;
    	}
	
	childHolder.btnSupprimer.setOnClickListener(new View.OnClickListener() 
	{
            @Override
            public void onClick(View v)
            {
                travelListItemListener.deleteTravelListItem(itemId);
            }
        });


3) In FeedsFragment.java class
	class FeedsFragment extends BaseFragment implements TravelListItemListener
	{
	     public void deleteTravelListItem(String itemId)
   	     {			
		Log.d("Item to delete",""+itemId);
	     }
	}	
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Create Service, Setting Alarm Timing to Push Notification and stop the Service when the alarm tiggers
====================================================================================================================================================================
MainActivity.java
=================

public class MainActivity extends Activity {

    private PendingIntent pendingIntent;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Intent alarmIntent = new Intent(MainActivity.this, AlarmReceiver.class);
        pendingIntent = PendingIntent.getBroadcast(MainActivity.this, 0, alarmIntent, 0);
        setAlarm();

        Intent intent = new Intent(MainActivity.this, TravelService.class);
        startService(intent);
    }

    public void setAlarm()
    {
        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.HOUR_OF_DAY, 8);
        calendar.set(Calendar.MINUTE, 50);
        calendar.set(Calendar.SECOND, 0);

        manager.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pendingIntent);
        Toast.makeText(this, "Alarm Set", Toast.LENGTH_SHORT).show();
    }
}


TravelService.java
==================

public class TravelService extends Service
{
    private static int value = 0;
    private boolean flag = true;
    @Override
    public IBinder onBind(Intent intent)
    {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    public void onCreate()
    {
        super.onCreate();
        Toast.makeText(getApplicationContext(), "Service Created", Toast.LENGTH_LONG).show();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId)
    {
        Log.d("Service", "Service Created.");
        return 1;
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        Log.d("","Service has Destroyed");
    }
}

AlarmReceiver.java
==================
public class AlarmReceiver extends BroadcastReceiver
{
    private Context context;
    public AlarmReceiver()
    {
    }

    @Override
    public void onReceive(Context context, Intent intent)
    {
        this.context = context;
        pushNotification();
        Log.d("", "In OnReceive Method ");
        context.stopService(new Intent(context, TravelService.class));
    }

    private void pushNotification()
    {
        Intent intent = new Intent(context, NotificationActivity.class);
        NotificationManager manager = (NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
        PendingIntent pendingIntent =  PendingIntent.getActivity(context, 0, intent, 0);

        Bitmap bitmap = BitmapFactory.decodeResource(Resources.getSystem(), R.drawable.btimg);
        NotificationCompat.Builder mbuilder = new NotificationCompat.Builder(context)
                .setLargeIcon(bitmap)                       //Image shown when you Expand the notification
                .setSmallIcon(R.drawable.btimg1)   //Image shown when you get the notification
                .setContentTitle("New Notification")        //Title for the notification
                .setStyle(new NotificationCompat.BigTextStyle().bigText("You have Won One Lakh rupees"));

        mbuilder.setContentIntent(pendingIntent);
        manager.notify(0, mbuilder.build());
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Feez Core part Logic
=======================================================================================================================================================================
    private final int TRACKING_START_SPEED = 10;
    private final int TRACKING_END_SPEED = 0;
    private boolean isTravelTrackStart = false;
    private boolean isTravelTrackEnd = false;
    private boolean isCalculateTravelEndWaitingTime = false;
    private int userWaitingTime = 5 * 60 * 1000;
    private double travelTrackEndStartWaitingTime=0;
    private String TAG = this.getClass().getSimpleName();

	double currentSpeed = location.getSpeed() * 3.6f;  //this method returns always zero

        if(!isTravelTrackStart) {
            if(currentSpeed >= TRACKING_START_SPEED) {
                isTravelTrackStart = true;
                isTravelTrackEnd = false;
                double travelStartTime = location.getTime();
                Log.d(TAG + "---->", "Tracking Start Time :" + travelStartTime);
                //call Travel Create Web Service
            }
        }
        if(isTravelTrackStart) {
            if ((currentSpeed == TRACKING_END_SPEED)&&(!isCalculateTravelEndWaitingTime))
            {
                isCalculateTravelEndWaitingTime = true;
                travelTrackEndStartWaitingTime = location.getTime();
            }
            if(isCalculateTravelEndWaitingTime) {
                double currentTime = location.getTime();
                if ((currentTime - travelTrackEndStartWaitingTime) >= userWaitingTime) {
                    isCalculateTravelEndWaitingTime = false;
                    isTravelTrackEnd = true;
                    isTravelTrackStart = false;
                    Log.d(TAG + " ---->", "Tracking Stop Time :" + currentTime);
                    //call Travel End Web Service
                }
            }
            if(currentSpeed > TRACKING_END_SPEED)
            {
                 isCalculateTravelEndWaitingTime = false;
            }
        }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Code for CountDownTimer to display VideoTimer
=======================================================================================================================================================================
protected void onCreate(Bundle savedInstanceState)
{
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_timer);
        mTextView = (TextView) findViewById(R.id.mTextView);

        new CountDownTimer(30000, 1000) 		// (Time to Start the Counter, intervalTime)
        {

            public void onTick(long millisUntilFinished) {
                mTextView.setText("seconds remaining: " + millisUntilFinished / 1000);
            }

            public void onFinish() {
                mTextView.setText("done!");
            }
        }.start();
     }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Steps For Releasing APK in google play store
=======================================================================================================================================================================
   Mandatory Steps
   ===============

	The App.apk file which you created wouldn't be uploaded in google play developer console because of 
	1) it is in app-debug.apk version (i.e: in the debug mode), where google play accept only release mode (app-release.apk)
	2) app-release.apk version needs self signed certificate to upload in google play the certificate is important for later update.
	   so keep the key file as safe and Follow below steps.

1) Login to google play developer console using the credentials (Merchant Account Credentials)
   info@eventurers.com
   leon1315

2) Build APK file by making the below changes in the Android Studio for (app-release.apk) i.e: for production release

   --> In AndroidManifest.xml file include the below line in application tag
	
	<application
	 android:debuggable="false"
	..../>

   --> In Android studio look for "Build Variant" tab at the side of studio
	in that change "build variant" from debug to release.

3)  For Self-Signed Certificate for (app-release.apk). For generating a keyStore file for the project to run in release mode. 
    follow the link : http://developer.android.com/tools/publishing/app-signing.html#studio    -->Signing Your app in Android Studio
    Save and Backup the KeyStore file (it is important for updating the .apk file)

4)  Build the App.apk file in the (app-release.apk) file.

5)  Juicy Part of uploading :
	i)  In Developer console Click Add new application.
	ii) Enter the name of the Application, Don't upload the file.
	iii)Enter the title & Clik on PREPARE STORE LISTING. it will generate the public key for the app.
	iv) Include the public key in "MainActivity.java" creating IabHelper instance.
	v)  In release mode build the App.apk file, then copy the (app-release.apk) file from the workspace
 	vi) In browser click "Upload apk" button and drag the .apk file and upload it.

6)  Creating in-app Products / Adding new product for the APK file, with all the required details
7)  If publish app is inactive, click on above link whyn't publish to get the details.
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
www.parse.com is the url where we are creating web service for the feez project using the credentials 
 username : suhanya@eventurers.com
 password : suhanya@123

To start a service while receiving the notification, we have to extend the class "ParsePushNotificationBroadcastReceiver"
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android code for Cropping an Image in to Circular Shape from a bitmap (Circle shape)
=======================================================================================================================================================================

        public Bitmap getCroppedBitmap(Bitmap bitmap) {
        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),  bitmap.getHeight(), Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(output);

        final int color = 0xff424242;
        final Paint paint = new Paint();
        final Rect rect = new Rect(20, 40, bitmap.getWidth(), bitmap.getHeight());

        paint.setAntiAlias(true);
        canvas.drawARGB(0, 0, 0, 0);
        paint.setColor(color);
        canvas.drawCircle(bitmap.getWidth() / 2, bitmap.getHeight() / 2, bitmap.getWidth() / 2, paint);
        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
        canvas.drawBitmap(bitmap, rect, rect, paint);
        return output;
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
RoundRectShape class for drawing transperant cirlce for cropping the image. (as like O shape)
=======================================================================================================================================================================
	protected void onDraw(Canvas canvas)
	{
        super.onDraw(canvas);
     
	RectF inset = new RectF(50, 50, 50, 50);   	//(left, top, right, bottom) values from the screen( 50px frm left, 50px frm top, 50 frm right, 50 frm bottom)
        float rvalue = width/2;				//width is the device width using DisplayMetrics
        float[] innerR = new float[] {rvalue, rvalue, rvalue, rvalue, rvalue, rvalue, rvalue, rvalue };
        RoundRectShape mBitmapRoundRect = new RoundRectShape(null, inset, innerR);
        ShapeDrawable drawable=new ShapeDrawable(mBitmapRoundRect);
        drawable.getPaint().setColor(Color.parseColor("#80000000"));	//transperant color
        drawable.setBounds(0,0,width,width);
        drawable.draw(canvas);
	}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Content Providers  (Android code to read the calendar events using Content providers and Storing to Cursor)
=======================================================================================================================================================================
	Content providers store data and make it accessible to applications. 
	Content Provider expose data as a set of tables based on a relational database model, where each row is a record and each column is data of a particular type and meaning. 
	Every content provider exposes a public URI. All URIs for providers begin with the string "content://". 

	public static ArrayList<String> readCalendarEvent(Context context) 
    	{
		Cursor cursor = context.getContentResolver().query(Uri.parse("content://com.android.calendar/events"),
				new String[] { "calendar_id", "title", "description", "dtstart", "dtend", "eventLocation" }, null, null, null);
		cursor.moveToFirst();
		String CNames[] = new String[cursor.getCount()];
		for (int i = 0; i < CNames.length; i++) 
		{

			nameOfEvent.add(cursor.getString(1));
		        if(cursor.getString(3)!=null)
			startDates.add(getDate(Long.parseLong(cursor.getString(3))));
	                if(cursor.getString(4)!=null)
			endDates.add(getDate(Long.parseLong(cursor.getString(4))));
			descriptions.add(cursor.getString(2));
			CNames[i] = cursor.getString(1);
			cursor.moveToNext();
		}
	}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Checkbox selector / checkbox drawable with images
=======================================================================================================================================================================

	<CheckBox
                    android:id="@+id/cbk_exportfeeds_address"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="10dp"
                    android:layout_marginRight="10dp"
                    android:button="@drawable/checkbox_selector"
                    android:paddingLeft="20dp"
                    android:padding="10dp"
                    android:text="@string/str_export_mail_text6"
                    android:textColor="@color/white"
                    android:textSize="@dimen/text_large" />


	<?xml version="1.0" encoding="utf-8"?>
	<selector xmlns:android="http://schemas.android.com/apk/res/android">
    	<item android:drawable="@drawable/ic_export_unchecked" android:state_checked="false" />
    	<item android:drawable="@drawable/ic_export_checked" android:state_checked="true" />
    	<item android:drawable="@drawable/ic_export_unchecked" />
	</selector>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code to call dialer Intent, validate email, call email Intent/ Default Email, Dialler Intent
=======================================================================================================================================================================

	txtContactPhone.setOnClickListener(new View.OnClickListener() {			//dialler intent
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_DIAL);
                intent.setData(Uri.parse("tel:+61295636000"));
                startActivity(intent);
            }
        });

        txtContactEmail.setOnClickListener(new View.OnClickListener() {			//email intent
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_SEND);
                intent.putExtra(Intent.EXTRA_EMAIL  , new String[]{txtContactEmail.getText().toString()});
                intent.setType("text/plain");
                startActivity(Intent.createChooser(intent, "Send mail"));
            }
        });

	
	private boolean validateEmail(String email)
    	{
        	return email != null && android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches();			//validate email address
    	}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
DatePicker code, Compare CurrentDate with user Selected Date
=======================================================================================================================================================================

     showDatePicker();		//call this function from the View ActionListener method

     private void showDatePicker() 
     {
        showDialog(999);
     }

    protected Dialog onCreateDialog(int id) {
        if (id == 999)
        {
            return new DatePickerDialog(this, myDateListener, year, month, date);
        }
        return null;
    }

    private DatePickerDialog.OnDateSetListener myDateListener = new DatePickerDialog.OnDateSetListener() 
    {
        @Override
        public void onDateSet(DatePicker datePicker, int syear, int smonth, int sdate)
        {
            Calendar calendar = Calendar.getInstance();					//These 5 lines get the user selected date and convert to TimeInMilliSec
            calendar.set(Calendar.DAY_OF_MONTH, datePicker.getDayOfMonth());
            calendar.set(Calendar.MONTH, datePicker.getMonth());
            calendar.set(Calendar.YEAR, datePicker.getYear());
            long selectedDateTime = calendar.getTimeInMillis();

            long currentDateTime = Calendar.getInstance().getTimeInMillis();		//Getting Current Date TimeInMilliSec
            Log.d(TAG , "  selectedDateTime : "+selectedDateTime+"   Current date time :" + currentDateTime);
            if(selectedDateTime <= currentDateTime)
            {
                showDate(syear,smonth + 1, sdate);
            }
            else
            {
                Toast.makeText(NewMemberEntry.this, "DOB can't be future date", Toast.LENGTH_SHORT).show();
            }
        }
    };

    private void showDate(int year, int month, int date)
    {
        String selectedMonth = ((month<10)?"0"+month:""+month);
        String selectedDate = ((date<10)?"0"+date:""+date);
        edtMemberDob.setText(selectedDate+"/"+selectedMonth+"/"+year);
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
ScrollView won't scroll when the softKeyboard occurs due to editing in the EditText
=======================================================================================================================================================================

Include the line in the AndroidManifest.xml file of the ScrollView Activity.

	    <activity
            android:name=".activities.setttings.NewMemberEntry"
            android:windowSoftInputMode="stateVisible|adjustResize"
            android:label="@string/title_activity_new_member_entry" >
            </activity>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Push notification Steps for android apps
=======================================================================================================================================================================
Registration process
----------------------

Step 1: Android device sends Device Id, application ID to the GCM Server for registration
Step 2: On Successfull registration, GCM Server will issue registration Id  to android device
Step 3: After receiving registration ID, device will send registration Id to our server(PHP Server)
Step 4: Our Server will store registration in the database(MySQL) for later usage.

Sending Push Message process
-----------------------------
Step 1: When push notification is needed, our server(php Server) will send a message to GCM Server
	along with registration ID(stored already in DB)
Step 2: GCM will deliver the message to respective mobile device using Registration ID.

Registering with GCM
---------------------
Step 1: Create a new project in google Developer Console   https://console.developers.google.com/project
Step 2: Note down the project Id.
Step 3: Click on Enable and Manage APIs
Step 4: under Mobile APIs Click on Cloud Messaging for Android
Step 5: Click on Credentials --> Add Credentials --> Service Account --> JSon --> Create
Step 6: It will provide the Json file. Save the file which has API key, API key is used while sending request to GCM server
	 (you can view all the active APIs in Enabled API)

-- GCM Connection Server accepts downstream message (i.e: From your App Server to Client app)
-- XMPP Connection Server also accept upStream message. (i.e:  From the client app and forward them to your app server)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code for Alphabet indexed ListView (like Contacts in iphone)
=======================================================================================================================================================================
1) activity_main.xml
--------------------

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="horizontal"
    android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".MainActivity">

    <ListView
        android:id="@+id/list_fruits"
        android:layout_width="0dp"
        android:layout_weight="1"
        android:layout_height="wrap_content"
        android:scrollbars="none">
    </ListView>

    <LinearLayout
        android:id="@+id/side_index"
        android:layout_width="wrap_content"
        android:layout_height="fill_parent"
        android:background="@color/white"
        android:gravity="center_horizontal"
        android:orientation="vertical" >
    </LinearLayout>

</LinearLayout>

2) alphabetindicator.xml
-------------------------

<TextView xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/side_list_item"
        android:layout_width="wrap_content"
        android:layout_height="fill_parent"
        android:gravity="center"
        android:padding="3dp"
        android:textSize="14sp" />

3) indexindicator.xml
---------------------

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_height="wrap_content"
    android:layout_width="match_parent"
    android:orientation="vertical">
    <TextView
        android:id="@+id/listitem"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="left"
        android:padding="3dp"
        android:textColor="#000000"
        android:textSize="14sp" />
</LinearLayout>


4) MainActivity.xml
-------------------
public class MainActivity extends Activity implements View.OnClickListener
{
    private Map<String, Integer> mapIndex;
    private String[] fruits;
    private ListView fruitsList;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        init();
        fruitsList.setAdapter(new CustomAdapter(this, Arrays.asList(fruits)));

        getIndexList(fruits);
        displayIndex();
    }

    private void init()
    {
        fruitsList = (ListView)findViewById(R.id.list_fruits);
        fruits = getResources().getStringArray(R.array.fruits_array);
        Arrays.sort(fruits);
    }

    private void getIndexList(String[] fruits)
    {
        mapIndex = new LinkedHashMap<String, Integer>();
        for(int i=0; i<fruits.length; i++)
        {
            String fruit = fruits[i];
            String index = fruit.substring(0,1);

            if(mapIndex.get(index) == null)
                mapIndex.put(index, i);
        }
    }

    private void displayIndex()
    {
        LinearLayout indexLayout = (LinearLayout)findViewById(R.id.side_index);
        List<String> indexList = new ArrayList<String>(mapIndex.keySet());

        TextView textView;
        for(String index : indexList)
        {
            textView = (TextView) getLayoutInflater().inflate(R.layout.alphabetindicator, null);
            textView.setText(index);
            textView.setOnClickListener(this);
            indexLayout.addView(textView);
        }
    }

    @Override
    public void onClick(View v) {
        TextView selectedTextView  = (TextView) v;
        fruitsList.setSelection(mapIndex.get(selectedTextView.getText()));
    }
}

5) CustomAdapter.java
----------------------
public class CustomAdapter extends BaseAdapter
{
    private Context context;
    private List<String> listItem;
    private LayoutInflater layoutInflater;

    CustomAdapter(Context context, List<String> listItem) {
        this.context = context;
        this.listItem = listItem;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder viewHolder;
        if (convertView == null) {
            viewHolder = new ViewHolder();
            layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = layoutInflater.inflate(R.layout.indexindicator, parent, false);
            viewHolder.textView = (TextView) convertView.findViewById(R.id.listitem);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }
        viewHolder.textView.setText(listItem.get(position));
        return convertView;
    }

    static class ViewHolder {
        TextView textView;
    }

    @Override
    public int getCount() {
        return listItem.size();
    }

    @Override
    public Object getItem(int position) {
        return listItem.get(position);
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }
}


strings.xml
-----------
<string-array name="fruits_array">

        <item>Cantalope</item>
        <item>Date</item>
        <item>Grape</item>
        <item>Gooseberry</item>
        <item>Guava</item>
        <item>Honeydew melon</item>
        <item>Elderberry</item>
        <item>Fig</item>
</string-array>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Transperant Background Color in HexaDecimal  / Transperancy color Codes
=======================================================================================================================================================================

Here's a correct table of percentages to hex values. E.g. for 50% white you'd use #80FFFFFF.

    100% — FF   (165)      (10 - A, 11 - B, 12 - C, 13 - D, 14 - E, 15 - F)
    95% — F2	(152)
    90% — E6	(146)
    85% — D9	(139)
    80% — CC	(132)
    75% — BF	(125)
    70% — B3	(113)
    65% — A6	(106)
    60% — 99	(99)
    55% — 8C	(92)
    50% — 80	(80)
    45% — 73	(73)
    40% — 66	(66)
    35% — 59	(59)
    30% — 4D	(53)
    25% — 40	(40)
    20% — 33	(33)
    15% — 26	(26)
    10% — 1A	(20)
    5% — 0D	(13)
    0% — 00	(00)	


Color Codes

<resources>

    <!-- Android style -->
    <color name="android_green">#A4C639</color>
	
    <!-- Android Holo style -->
	<color name="holo_blue_bright">#ff00ddff</color>
	<color name="holo_blue_dark">#ff0099cc</color>
	<color name="holo_blue_light">#ff33b5e5</color>
	<color name="holo_green_dark">#ff669900</color>
	<color name="holo_green_light">#ff99cc00</color>
	<color name="holo_orange_dark">#ffff8800</color>
	<color name="holo_orange_light">#ffffbb33</color>
	<color name="holo_purple">#ffaa66cc</color>
	<color name="holo_red_dark">#ffcc0000</color>
	<color name="holo_red_light">#ffff4444</color>
	
    <!-- Windows 8 style -->
    <color name="win8_magenta">#FF0097</color>
    <color name="win8_purple">#A200FF</color>
    <color name="win8_teal">#00ABA9</color>
    <color name="win8_lime">#8CBF26</color>
    <color name="win8_brown">#A05000</color>
    <color name="win8_pink">#E671B8</color>
    <color name="win8_orange">#F09609</color>
    <color name="win8_blue">#1BA1E2</color>
    <color name="win8_red">#E51400</color>
    <color name="win8_green">#339933</color>

    <!-- Common -->
    <color name="white">#FFFFFF</color>
    <color name="black">#000000</color>
    <color name="red">#FF0000</color>
    <color name="green">#008000</color>
    <color name="blue">#0000FF</color>
    <color name="yellow">#FFFF00</color>
    <color name="teal">#008080</color>
    <color name="Orange">#FFA500</color>

    <!-- Generic -->
    <!-- Generic Dark -->
    <color name="DarkTurquoise">#00CED1</color>
    <color name="DarkCyan">#008B8B</color>
    <color name="DarkGreen">#006400</color>
    <color name="DarkSalmon">#E9967A</color>
    <color name="DarkBlue">#00008B</color>
    <color name="DarkOrange">#FF8C00</color>
    <color name="DarkOrchid">#9932CC</color>
    <color name="DarkViolet">#9400D3</color>
    <color name="DarkMagenta">#8B008B</color>
    <color name="DarkRed">#8B0000</color>
    <color name="DarkOliveGreen">#556B2F</color>
    <color name="DarkSlateGray">#2F4F4F</color>
    <color name="DarkSlateBlue">#483D8B</color>
    <color name="DarkSeaGreen">#8FBC8F</color>
    <color name="DarkGray">#A9A9A9</color>
    <color name="DarkGoldenrod">#B8860B</color>
    <color name="DarkKhaki">#BDB76B</color>

    <!-- Generic Light -->
    <color name="LightGrey">#D3D3D3</color>
    <color name="LightSteelBlue">#B0C4DE</color>
    <color name="LightBlue">#ADD8E6</color>
    <color name="LightPink">#FFB6C1</color>
    <color name="LightSalmon">#FFA07A</color>
    <color name="LightCyan">#E0FFFF</color>
    <color name="LightCoral">#F08080</color>
    <color name="LightSkyBlue">#87CEFA</color>
    <color name="LightSeaGreen">#20B2AA</color>
    <color name="LightSlateGray">#778899</color>
    <color name="LightGreen">#90EE90</color>
    <color name="LightYellow">#FFFFE0</color>
    <color name="LightGoldenrodYellow">#FAFAD2</color>

    <!-- Generic Medium -->
    <color name="MediumSlateBlue">#7B68EE</color>
    <color name="MediumAquamarine">#66CDAA</color>
    <color name="MediumVioletRed">#C71585</color>
    <color name="MediumOrchid">#BA55D3</color>
    <color name="MediumPurple">#9370DB</color>
    <color name="MediumBlue">#0000CD</color>
    <color name="MediumTurquoise">#48D1CC</color>
    <color name="MediumSeaGreen">#3CB371</color>
    <color name="MediumSpringGreen">#00FA9A</color>

    <!-- a -->
    <color name="Azure">#F0FFFF</color>
    <color name="AliceBlue">#F0F8FF</color>
    <color name="AntiqueWhite">#FAEBD7</color>
    <color name="Aquamarine">#7FFFD4</color>
    <!-- b -->
    <color name="Beige">#F5F5DC</color>
    <color name="BurlyWood">#DEB887</color>
    <color name="Brown">#A52A2A</color>
    <color name="BlueViolet">#8A2BE2</color>
    <color name="aqua">#00FFFF</color>
    <color name="Bisque">#FFE4C4</color>
    <color name="BlanchedAlmond">#FFEBCD</color>
    <!-- c -->
    <color name="Cornsilk">#FFF8DC</color>
    <color name="Coral">#FF7F50</color>
    <color name="Chocolate">#D2691E</color>
    <color name="Crimson">#DC143C</color>
    <color name="CornflowerBlue">#6495ED</color>
    <color name="CadetBlue">#5F9EA0</color>
    <color name="Chartreuse">#7FFF00</color>
    <!-- d -->
    <color name="DeepPink">#FF1493</color>
    <color name="DeepSkyBlue">#00BFFF</color>
    <color name="DimGray">#696969</color>
    <color name="DodgerBlue">#1E90FF</color>
    <!-- e -->
    <!-- f -->
    <color name="fuchsia">#FF00FF</color>
    <color name="ForestGreen">#228B22</color>
    <color name="FloralWhite">#FFFAF0</color>
    <color name="FireBrick">#B22222</color>
    <color name="Fuchsia">#FF00FF</color>
    <!-- g -->
    <color name="Gold">#FFD700</color>
    <color name="GreenYellow">#ADFF2F</color>
    <color name="gray">#808080</color>
    <color name="Goldenrod">#DAA520</color>
    <color name="Gainsboro">#DCDCDC</color>
    <color name="GhostWhite">#F8F8FF</color>
    <!-- h -->
    <color name="Honeydew">#F0FFF0</color>
    <color name="HotPink">#FF69B4</color>
    <!-- i -->
    <color name="Indigo">#4B0082</color>
    <color name="Ivory">#FFFFF0</color>
    <color name="IndianRed">#CD5C5C</color>
    <!-- j -->
    <!-- k -->
    <color name="Khaki">#F0E68C</color>
    <!-- l -->
    <color name="lime">#00FF00</color>
    <color name="LawnGreen">#7CFC00</color>
    <color name="LavenderBlush">#FFF0F5</color>
    <color name="Linen">#FAF0E6</color>
    <color name="LemonChiffon">#FFFACD</color>
    <color name="Lavender">#E6E6FA</color>
    <color name="LimeGreen">#32CD32</color>
    <!-- m -->
    <color name="maroon">#800000</color>
    <color name="Moccasin">#FFE4B5</color>
    <color name="Maroon">#800000</color>
    <color name="MintCream">#F5FFFA</color>
    <color name="Magenta">#FF00FF</color>
    <color name="MidnightBlue">#191970</color>
    <color name="MistyRose">#FFE4E1</color>
    <!-- n -->
    <color name="navy">#000080</color>
    <color name="NavajoWhite">#FFDEAD</color>
    <!-- o -->
    <color name="olive">#808000</color>
    <color name="OliveDrab">#6B8E23</color>
    <color name="OrangeRed">#FF4500</color>
    <color name="OldLace">#FDF5E6</color>
    <color name="Orchid">#DA70D6</color>
    <!-- p -->
    <color name="PeachPuff">#FFDAB9</color>
    <color name="Pink">#FFC0CB</color>
    <color name="Peru">#CD853F</color>
    <color name="PaleGoldenrod">#EEE8AA</color>
    <color name="PaleVioletRed">#DB7093</color>
    <color name="Plum">#DDA0DD</color>
    <color name="PaleGreen">#98FB98</color>
    <color name="PowderBlue">#B0E0E6</color>
    <color name="PaleTurquoise">#AFEEEE</color>
    <color name="PapayaWhip">#FFEFD5</color>
    <!-- r -->
    <color name="RoyalBlue">#4169E1</color>
    <color name="RosyBrown">#BC8F8F</color>
    <!-- s -->
    <color name="silver">#C0C0C0</color>
    <color name="Seashell">#FFF5EE</color>
    <color name="Snow">#FFFAFA</color>
    <color name="Sienna">#A0522D</color>
    <color name="SpringGreen">#00FF7F</color>
    <color name="SkyBlue">#87CEEB</color>
    <color name="SeaGreen">#2E8B57</color>
    <color name="SteelBlue">#4682B4</color>
    <color name="SlateGray">#708090</color>
    <color name="SlateBlue">#6A5ACD</color>
    <color name="SaddleBrown">#8B4513</color>
    <color name="Salmon">#FA8072</color>
    <color name="SandyBrown">#F4A460</color>
    <!-- t -->
    <color name="Thistle">#D8BFD8</color>
    <color name="Turquoise">#40E0D0</color>
    <color name="Tan">#D2B48C</color>
    <color name="Tomato">#FF6347</color>
    <!-- u -->
    <!-- v -->
    <color name="purple">#800080</color>
    <color name="Violet">#EE82EE</color>
    <!-- w -->
    <color name="WhiteSmoke">#F5F5F5</color>
    <color name="Wheat">#F5DEB3</color>
    <!-- x -->
    <!-- y -->
    <color name="YellowGreen">#9ACD32</color>
    <!-- z -->

</resources>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android getColor() method to avoid the deprecated Code
=======================================================================================================================================================================

    public static int getColor(Context context, int id)
    {
        final int version = Build.VERSION.SDK_INT;
        if(version >= Build.VERSION_CODES.M) {
            return ContextCompat.getColor(context, id);
        }else {
            return context.getResources().getColor(id);
        }
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Divider View
=======================================================================================================================================================================

 <View
  android:layout_height="2dp"
  android:layout_width="match_parent"
  android:background="@color/divider_light_grey"/>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android SnackBar code to Create and Customize SnackBar
=======================================================================================================================================================================
	Snackbar.make(AnyTextView, "Text to be Displayed", Snackbar.LENGTH_LONG).show();

	Snackbar snackbar = Snackbar.make(TextView, "Text to be Displayed", Snackbar.LENGTH_SHORT).setAction(RETRY, new View.OnClickListener()
	{
	  public void onClick(View view)
	  {
	  }
	});

	snackbar.setActionTextColor(Color.RED)		//Changing message Text Color
	
	View sbview = snackbar.getView();		//Changing actionButton Text Color
	TextView textView  = (TextView)sbview.findViewById(android.support.design.R.id.snackbar_text);
	textView.setTextColor(Color.YELLOW);
	snackbar.show();
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Change Cursor Color in EditText
=======================================================================================================================================================================
Setting the 

android:textCursorDrawable="@null"(attribute to @null) 	should result in the use of android:textColor as the cursor color.
Attribute "textCursorDrawable" is available in API level 12 and higher

<EditText  
    android:layout_width="fill_parent" 
    android:layout_height="wrap_content" 
    android:textCursorDrawable="@drawable/color_cursor"/>

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android" >
    <size android:width="3dp" />
    <solid android:color="#FFFFFF"  />
</shape>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Lanes Project
=======================================================================================================================================================================

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }              //Include this line in app(module) build.gradle
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Git.exe path : C:\Users\evuser\AppData\Local\Programs\Git\cmd  and SQL Query for Lane Tooteets table
=======================================================================================================================================================================
CREATE TABLE tooteets (id TEXT, text TEXT, file_url_1 TEXT, file_url_2 TEXT, thumb_url_1 TEXT, thumb_url_2 TEXT, color TEXT, local_parent_folder TEXT, 
unique_file_name TEXT, unique_thumbnail_name TEXT, keywords TEXT, created_user_name TEXT, updated_user_name TEXT, is_favorite INTEGER DEFAULT 0, 
is_tooti_author INTEGER DEFAULT 1, tweet_type INTEGER, rating INTEGER DEFAULT 0, weather_type INTEGER DEFAULT 0, latitude DOUBLE DEFAULT 0.0, 
longitude DOUBLE DEFAULT 0.0, group_key TEXT, tweet_date INTEGER, group_sort_order INTEGER, no_of_unread_tooteets INTEGER DEFAULT 0, 
no_of_comments INTEGER DEFAULT 0, no_of_unread_comments INTEGER DEFAULT 0, lane_id TEXT, lane_name TEXT, expense_json TEXT, is_synced INTEGER DEFAULT 0, 
is_update INTEGER DEFAULT 0, is_deleted INTEGER DEFAULT 0)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Item Decoration / ItemDecoration / RecyclerView Spacing / RecyclerView horizontal and Vertical Spacing
=======================================================================================================================================================================
RecyclerView doesn't use the Default Spacing as like GridView's horizontalSpacing and VerticalSpacing, We have to use ItemDecoration Class

	mRecyclerView.setLayoutManager(mLayoutManager);
        SpacingDecoration spacingDecoration = new SpacingDecoration(2, 2, true);
        mRecyclerView.addItemDecoration(spacingDecoration);


	public static class SpacingDecoration extends RecyclerView.ItemDecoration {

        private int mHorizontalSpacing = 5;
        private int mVerticalSpacing = 5;
        private boolean isSetMargin = true;

        public SpacingDecoration(int hSpacing, int vSpacing, boolean setMargin) {
            isSetMargin = setMargin;
            mHorizontalSpacing = hSpacing;
            mVerticalSpacing = vSpacing;
        }

        @Override
        public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
            boolean isSetMarginLeftAndRight = this.isSetMargin;
            int bottomOffset = mVerticalSpacing;
            int leftOffset = 0;
            int rightOffset = 0;

            RecyclerView.LayoutParams lp = (RecyclerView.LayoutParams) view.getLayoutParams();
            if (parent.getLayoutManager() instanceof GridLayoutManager) {
                GridLayoutManager lm = (GridLayoutManager) parent.getLayoutManager();
                GridLayoutManager.LayoutParams gridLp = (GridLayoutManager.LayoutParams) lp;

                if (gridLp.getSpanSize() == lm.getSpanCount()) {
                    // Current item is occupied the whole row
                    // We just need to care about margin left and right now
                    if (isSetMarginLeftAndRight) {
                        leftOffset = mHorizontalSpacing;
                        rightOffset = mHorizontalSpacing;
                    }
                } else {
                    // Current item isn't occupied the whole row
                    if (gridLp.getSpanIndex() > 0) {
                        // Set space between items in one row
                        leftOffset = mHorizontalSpacing;
                    } else if (gridLp.getSpanIndex() == 0 && isSetMarginLeftAndRight) {
                        // Set left margin of a row
                        leftOffset = mHorizontalSpacing;
                    }
                    if (gridLp.getSpanIndex() == lm.getSpanCount() - gridLp.getSpanSize() && isSetMarginLeftAndRight) {
                        // Set right margin of a row
                        rightOffset = mHorizontalSpacing;
                    }
                }
            }
            outRect.set(leftOffset, 0, rightOffset, bottomOffset);
        }
    }

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Android Application Basics
=======================================================================================================================================================================

Once installed on a device, each Android app lives in its own security sandbox:

    The Android operating system is a multi-user Linux system in which each app is a different user.
    By default, the system assigns each app a unique Linux user ID (the ID is used only by the system and is unknown to the app). The system sets permissions for all the files in an app so that only the user ID assigned to that app can access them.
    Each process has its own virtual machine (VM), so an app's code runs in isolation from other apps.
    By default, every app runs in its own Linux process. Android starts the process when any of the app's components need to be executed, then shuts down the process when it's no longer needed or when the system must recover memory for other apps.

In this way, the Android system implements the principle of least privilege. That is, each app, by default, has access only to the components that it requires to do its work and no more. This creates a very secure environment in which an app cannot access parts of the system for which it is not given permission.

However, there are ways for an app to share data with other apps and for an app to access system services:

    It's possible to arrange for two apps to share the same Linux user ID, in which case they are able to access each other's files. To conserve system resources, apps with the same user ID can also arrange to run in the same Linux process and share the same VM (the apps must also be signed with the same certificate).
    An app can request permission to access device data such as the user's contacts, SMS messages, the mountable storage (SD card), camera, Bluetooth, and more. All app permissions must be granted by the user at install time.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Github Push Project  / www.github.com
=======================================================================================================================================================================
Commit source code from Android Studio to GitHub using Graphical User Interface:

In github
---------
1) Login to github, Create a repository, copy the first line among 2  line of command

In Android studio
-----------------
2) Enable Version Control Integration from Menu

3) Choose Setting-> VCS->Enable Version Control Integration->Git->ok

4) Go to the project folder in File Explorer --> Right click select "Get Bash Here"

5) Execute the command copied in : step 1

6) from Menu -->Import and share Project:
  
     VCS->Import into version control->share project on github

     Select the files you want to export

7) In Login Window give ur github login and password then choose login.

8) Give Repository name and description which u going to create in your github account. Then choose share->ok.

9) Commit modified files:

	Enter the commit phrase. choose "push to commit" option.

10) Execute the Second command got from : step 1 (used to push the files)

11) Refresh the repository place.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------